{"version":3,"sources":["views/apps/roleAndPermission/RoleList.js"],"names":["AllUsers","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","valueGetter","width","filter","cellRendererFramework","params","className","data","emp","name","cellRenderer","dashboard","store","contacts","inventory","stockControl","coupons","subscription","billing","order","purchase","reports","rolesPermission","setting","size","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axios","get","headers","localStorage","getItem","then","response","id","console","log","this","sm","col-sm-6","history","push","tag","length","right","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/193.3d93e179.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nclass AllUsers extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No.\",\r\n        field: \"\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        width: 110,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"Employee Name\",\r\n        field: \"name\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.emp?.name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Dashboard\",\r\n        field: \"dashboard\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.dashboard ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Store\",\r\n        field: \"store\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.store ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Contacts\",\r\n        field: \"contacts\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.contacts ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Inventory\",\r\n        field: \"inventory\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.inventory ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Stock Control\",\r\n        field: \"stockControl\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.stockControl ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Coupons\",\r\n        field: \"coupons\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.coupons ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Subscription\",\r\n        field: \"subscription\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.subscription ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Billing\",\r\n        field: \"billing\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.billing ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Order\",\r\n        field: \"order\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.order ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Purcahse\",\r\n        field: \"purchase\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.purchase ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Reports\",\r\n        field: \"reports\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.reports ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Permission\",\r\n        field: \"rolesPermission\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.rolesPermission ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Setting\",\r\n        field: \"setting\",\r\n        filter: true,\r\n        editable: false,\r\n        width: 120,\r\n        cellRenderer: (params) => {\r\n          return `<input type='checkbox' ${\r\n            params.data.setting ? \"checked\" : \"\"\r\n          } />`;\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Eye\r\n                className=\"mr-50\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/app/users/roleAndPermission/viewRole/${params.data._id}`\r\n                  )\r\n                }\r\n              /> */}\r\n              {/* <Edit\r\n                className=\"mr-50\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(\"/app/users/roleAndPermission/editRole\")\r\n                }\r\n              /> */}\r\n              <Trash2\r\n                size={20}\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(\"http://35.154.86.59/api/admin/allrole\", {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        let rowData = response.data.data;\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axios\r\n      .get(`http://35.154.86.59/api/admin/del_role/${id}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  All User Roles\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() => history.push(\"/app/roleAndPermission/addRole\")}\r\n                >\r\n                  Add New User\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default AllUsers;\r\n"],"sourceRoot":""}