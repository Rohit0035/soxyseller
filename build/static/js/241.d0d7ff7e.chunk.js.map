{"version":3,"sources":["views/apps/offerAndCoupon/coupons/EditCoupon.js"],"names":["EditCoupon","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","headers","localStorage","getItem","then","response","console","log","swal","history","push","catch","error","coupon_title","offer_code","product","description","startDate","expireOn","amount","productS","a","this","get","data","className","col-sm-6","onClick","onSubmit","lg","md","type","onChange","placeholder","map","productH","key","_id","product_name","sm","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/241.d0d7ff7e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  CustomInput,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport class EditCoupon extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      coupon_title: \"\",\r\n      offer_code: \"\",\r\n      product: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      expireOn: \"\",\r\n      amount: \"\",\r\n      status: \"\",\r\n    };\r\n    this.state = {\r\n      productS: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/getonecoupon/${id}`, {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          coupon_title: response.data.data.coupon_title,\r\n          offer_code: response.data.data.offer_code,\r\n          product: response.data.data.product,\r\n          description: response.data.data.description,\r\n          startDate: response.data.data.startDate,\r\n          expireOn: response.data.data.expireOn,\r\n          amount: response.data.data.amount,\r\n          status: response.data.data.status,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    //Product List\r\n    axiosConfig\r\n      .get(\"/productbysellerbytoken\", {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ productS: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`/editcoupon/${id}`, this.state, {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/offerAndCoupon/coupons/couponsList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Coupons\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() =>\r\n                  history.push(\"/app/offerAndCoupon/coupons/couponsList\")\r\n                }\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Coupon Title </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"coupon_title\"\r\n                    value={this.state.coupon_title}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Offer Code </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"offer_code\"\r\n                    placeholder=\"Offer Code\"\r\n                    value={this.state.offer_code}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Product </Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"product\"\r\n                    value={this.state.product}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product</option>\r\n                    {this.state.productS.map((productH) => (\r\n                      <option key={productH._id} value={productH._id}>\r\n                        {productH.product_name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Description </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label> Coupon Start Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Coupon Expire date </Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"expireOn\"\r\n                    value={this.state.expireOn}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Amount </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"amount\"\r\n                    value={this.state.amount}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 \">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.changeHandler1(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span\r\n                      className=\"font-weight-bolder\"\r\n                      style={{ marginRight: \"20px\" }}\r\n                    >\r\n                      Active\r\n                    </span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Inactive\"\r\n                    />\r\n                    <span\r\n                      className=\"font-weight-bolder\"\r\n                      style={{ marginRight: \"3px\" }}\r\n                    >\r\n                      Inactive\r\n                    </span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  className=\"mr-1 mb-1\"\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                >\r\n                  Update Coupon\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCoupon;\r\n"],"sourceRoot":""}