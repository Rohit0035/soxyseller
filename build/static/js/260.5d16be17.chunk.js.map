{"version":3,"sources":["views/apps/transferType/EditTransferType.js"],"names":["EditTransferType","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","transfer_type","this","get","transferType","data","sm","listTag","href","tag","active","className","col-sm-6","onClick","onSubmit","lg","md","type","onChange","Ripple","color","Component"],"mappings":"2XAmBqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqBRC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SAvBhB,EAyBnBC,cAAgB,SAAAL,GACd,EAAKC,SAAL,eAAiBD,EAAEG,OAAOG,KAAON,EAAEG,OAAOC,SA1BzB,EA4BnBG,cAAgB,SAAAP,GACdA,EAAEQ,iBACF,IAAMC,EAAO,EAAKX,MAAMY,MAAMC,OAAxBF,GACNG,IACGC,KADH,oBACqBJ,GAAM,EAAKK,OAC7BC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZG,IAAK,WAAY,yBAA0B,WAC3C,EAAKrB,MAAMsB,QAAQC,KAAK,yCAEzBC,OAAM,SAAAC,GACLN,QAAQC,IAAIK,OArChB,EAAKT,MAAQ,CACTU,cAAe,GACftB,OAAQ,IAJK,E,qDAOnB,WAAqB,IAAD,OACZO,EAAOgB,KAAK3B,MAAMY,MAAMC,OAAxBF,GACNG,IACGc,IADH,uBACuBjB,IACpBM,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZ,EAAKf,SAAS,CACZ0B,aAAcX,EAASY,KAAKA,KAAKD,aACjCzB,OAAQc,EAASY,KAAKA,KAAK1B,YAG9BoB,OAAM,SAAAC,GACLN,QAAQC,IAAIK,Q,oBAuBlB,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKM,GAAG,MACN,6BACE,kBAAC,IAAD,CAAYC,QAAQ,OAClB,kBAAC,IAAD,CAAgBC,KAAK,sBAAsBC,IAAI,KAA/C,QAGA,kBAAC,IAAD,CAAgBD,KAAK,qCAAqCC,IAAI,KAA9D,sBAGA,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,0BAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,uBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,UAAU,8BACVE,QAAS,kBAAMhB,IAAQC,KAAK,wCAF9B,UAOJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMa,UAAU,MAAMG,SAAUZ,KAAKlB,eACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK+B,GAAG,IAAIC,GAAG,IAAIV,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAD,sBACA,kBAAC,IAAD,CACEM,KAAK,OACLlC,KAAK,gBACLF,MAAOqB,KAAKX,MAAMU,cAClBiB,SAAUhB,KAAKpB,kBAIrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKiC,GAAG,IAAIC,GAAG,IAAIV,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAOQ,OAAR,CACEC,MAAM,UACNH,KAAK,SACLN,UAAU,aAHZ,iB,GA3F4BU","file":"static/js/260.5d16be17.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from \"sweetalert\";\r\nexport default class EditTransferType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        transfer_type: \"\", \r\n        status: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/viewonesize/${id}`)\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          transferType: response.data.data.transferType,\r\n          status: response.data.data.status,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  changeHandler1 = e => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`/editsize/${id}`, this.state)\r\n      .then(response => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/transferType/transferTypeList\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/transferType/transferTypeList\" tag=\"a\">\r\n                Transfer Type List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Edit Transfer Type</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Transfer Type\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() => history.push(\"/app/transferType/transferTypeList\")}>\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Transfer Type</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"transfer_type\"\r\n                    value={this.state.transfer_type}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\">\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}