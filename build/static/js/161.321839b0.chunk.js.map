{"version":3,"sources":["views/apps/category/EditCategory.js"],"names":["EditCategory","props","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","match","params","state","data","FormData","append","sortorder","desc","values","keys","key","id","axiosConfig","post","headers","localStorage","getItem","then","response","history","push","catch","error","product_img","this","get","className","col-sm-6","onClick","onSubmit","lg","md","type","placeholder","onChange","sm","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/161.321839b0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n// import { useParams } from \"react-router-dom\";\r\n//import { ToastContainer, toast } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport class EditCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      sortorder: \"\",\r\n      desc: \"\",\r\n      product_img: \"\",\r\n      status: \"\",\r\n      selectedFile: null,\r\n      selectedName: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/getone_productcategory/${id}`, {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          product_img: response.data.data.product_img,\r\n          name: response.data.data.name,\r\n          desc: response.data.data.desc,\r\n          sortorder: response.data.data.sortorder,\r\n          status: response.data.data.status,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.props.match.params, this.state);\r\n    const data = new FormData();\r\n    data.append(\"name\", this.state.name);\r\n    data.append(\"sortorder\", this.state.sortorder);\r\n    data.append(\"desc\", this.state.desc);\r\n    data.append(\"status\", this.state.status);\r\n    if (this.state.selectedFile !== null) {\r\n      data.append(\r\n        \"product_img\",\r\n        this.state.selectedFile,\r\n        this.state.selectedName\r\n      );\r\n    }\r\n    for (var value of data.values()) {\r\n      console.log(value);\r\n    }\r\n    for (var key of data.keys()) {\r\n      console.log(key);\r\n    }\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`/editproductcategory/${id}`, data, {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/category/categoryList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Category\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() => history.push(\"/app/category/categoryList\")}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Category Name</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Category\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Description</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"desc\"\r\n                      value={this.state.desc}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Sort Order</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"Sort Order\"\r\n                      name=\"sortorder\"\r\n                      value={this.state.sortorder}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Image</Label>\r\n\r\n                  <Input type=\"file\" onChange={this.onChangeHandler} />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.changeHandler1(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Inactive\"\r\n                    />\r\n\r\n                    <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mb-1\"\r\n                >\r\n                  Update Category\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCategory;\r\n"],"sourceRoot":""}