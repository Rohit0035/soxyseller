{"version":3,"sources":["components/reactstrap/collapse/CollapseSourceCode.js","components/reactstrap/collapse/Accordion.js","components/reactstrap/collapse/CollapseDefault.js","components/reactstrap/collapse/CollapseUncontrolled.js","components/reactstrap/collapse/AccordionShadow.js","components/reactstrap/collapse/AccordionBorder.js","components/reactstrap/collapse/AccordionMargin.js","components/reactstrap/collapse/AccordionHover.js","components/reactstrap/collapse/Collapse.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Collapse.js","../node_modules/reactstrap/es/UncontrolledCollapse.js"],"names":["accordion","className","accordionShadow","accordionBorder","accordionMargin","accordionHover","collapseUncontrolled","collapseDefault","collapseItems","id","title","content","Accordion","state","activeTab","collapseID","status","toggleTab","tab","setState","toggleCollapse","prevState","onEntered","onEntering","onExited","onExiting","accordionItems","map","collapseItem","key","onClick","classnames","closing","opening","size","isOpen","Fragment","this","tabId","React","Component","CollapseDefault","index","indexOf","items","splice","push","includes","renderCollapse","Card","CardHeader","CardTitle","Collapse","CardBody","Nav","tabs","NavItem","NavLink","active","TabContent","TabPane","CollapseUncontrolled","UncontrolledCollapse","toggler","AccordionShadow","accordionShadowItems","open","AccordionBorder","accordionBorderItems","AccordionMargin","accordionMarginItems","AccordionHover","accordionHoverItems","onMouseEnter","Collaspe","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","TabContext","createContext","i","t","util","clone","languages","javascript","e","n","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","o","join","hooks","add","language","r","length","a","s","type","tagName","pop","openedBraces","g","Token","tokens","_excluded","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tagPropType","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","createElement","_extends","defaultProps","any","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prototype","render","_this$props","omit","Object","keys","Provider","value","activeTabId","getClasses","Consumer","_ref","_transitionStatusToCl","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","Transition","children","arrayOf","node","innerRef","func","appear","enter","exit","timeout","TransitionTimeouts","transitionStatusToClassHash","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","height","name","bind","_assertThisInitialized","_proto","isAppearing","onExit","offsetHeight","_this2","otherProps","transitionProps","pick","TransitionPropTypeKeys","childProps","in","collapseClass","getTransitionClass","style","ref","omitKeys","defaultOpen","isRequired","toggleEvents","defaultToggleEvents","togglers","removeEventListeners","toggle","componentDidMount","findDOMElements","addMultipleEventListeners","componentWillUnmount","preventDefault"],"mappings":"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","file":"static/js/66.998d48b2.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport const accordion = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Accordion`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionShadow = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionShadowItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className={classnames({\r\n                open: collapseItem.id === this.state.collapseID\r\n              })}\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate accordion-shadow\">\r\n      {accordionShadowItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionBorder = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionBorderItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className=\"collapse-border-item\"\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\">\r\n      {accordionBorderItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionMargin = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionMarginItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionMarginItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionHover = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionHoverItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionHoverItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseUncontrolled = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {UncontrolledCollaspe} from \"reactstrap\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        <Card>\r\n          <CardHeader id=\"item-1\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 1\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-1\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-2\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 2\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-2\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-3\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 3\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-3\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-4\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 4\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-4\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseDefault = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collaspe} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n\r\n  state = {\r\n    collapseItems: []\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={this.onEntering}\r\n            onEntered={this.onEntered}\r\n            onExiting={this.onExiting}\r\n            onExited={this.onExited}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        {renderCollapse}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\";\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport { Eye, Code, ChevronDown } from \"react-feather\";\r\nimport { accordion } from \"./CollapseSourceCode\";\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title:\r\n      \"How is an online stock/inventory management system better than ERP ?\",\r\n    content:\r\n      \"Generally, an ERP is not specialized in inventory management and it is costly to purchase, install and maintain On the other hand, an online inventory management system is hosted on the cloud server, and does not require any installation A cloud - based solution has a much better design and user experience.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title:\r\n      \"What more comes along with Buynaa's Inventory Management Solution ?\",\r\n    content:\r\n      \"Once you subscribe to the Buynaa Inventory Management Solution, you will have a dedicated shop profile published live on our website. This will help boost your visibility across your locality as well the entire city. Your shop will be subject to reviews and ratings by your customers. You can also use certain features to keep your customers updated regarding any events or sales\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Does Buynaa support multiple shops through one subscription ?\",\r\n    content:\r\n      \"No. Buynaa maintains a strict policy as in “One Shop One Subscription”. However, you will be notified via email or our salesperson beforehand regarding any change to our policy.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"How do I pay for my subscription ?\",\r\n    content:\r\n      \"You can opt for cash billing. You can also pay via cheque or net banking/ UPI.\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"What documents do I need to start my Buynaa account ?\",\r\n    content:\r\n      \"You will need to upload the following documents:-PAN card (Personal PAN for business type “Proprietorship” and Personal + Company PAN for business type “Company”),GSTIN.\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title:\r\n      \"What is the billing cycle for the Inventory Management Solution and how do I pay ?\",\r\n    content:\r\n      \"It is very easy to change or reset the password of your Buynaa account. Kindly follow the password reset instructions below The cloud - based solution is subscription-based and is billed annually. We accept cheque or cash transactions. As for online transactions, we will update you once it is available to use.\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"How to change or reset my password ?\",\r\n    content:\r\n      \"Click on “Forgot your password,Enter your registered email address.,Click on the link: “Change my password” received by email,Enter your new password and click on “Save\",\r\n  },\r\n  {\r\n    id: 8,\r\n    title:\r\n      \"I have the product list and want to switch to Buynaa’s Inventory Management Solution. How do I do it ?\",\r\n    content:\r\n      \"Simple! Download the excel format from the “Add Product” page. Input the entire product list in the excel format and upload it in bulk.\",\r\n  },\r\n  {\r\n    id: 9,\r\n    title: \"What happens in case of a low stock?\",\r\n    content:\r\n      \"While updating your product list, you will find a field known as Reorder Level. Once your stock reaches Reorder Level, you will receive an email and a sms suggesting to refill your stock. With Buynaa, you never go out of stock!\",\r\n  },\r\n  {\r\n    id: 10,\r\n    title: \"Can Buynaa identify my best-selling products ?\",\r\n    content:\r\n      \"Yes. You can generate revenue and profit reports in just a few clicks. The report is easy to follow and you can also view a more detailed list containing revenue, sales value, number of orders, number of customers, average sales value etc.In addition, you can determine the time range for the report and don't worry about data accuracy. The system is kept up-to-date automatically, thus eliminating human errors.\",\r\n  },\r\n];\r\n\r\nclass Accordion extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\",\r\n  };\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n  };\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\r\n    }));\r\n  };\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" });\r\n  };\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" });\r\n  };\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" });\r\n  };\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" });\r\n  };\r\n\r\n  render() {\r\n    const accordionItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader className=\"d-flex justify-content-center align-items-center\">\r\n            <CardTitle>\r\n              <h2 className=\"d-flex justify-content-center align-items-center\">\r\n                FAQ Page\r\n              </h2>\r\n            </CardTitle>\r\n            {/* <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\",\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\");\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\",\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\");\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div> */}\r\n          </CardHeader>\r\n          <CardBody>\r\n            {/* <p>\r\n              You may want to open one item at a time for that you can use\r\n              accordion.\r\n            </p> */}\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordion}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Accordion;\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseDefault } from \"./CollapseSourceCode\"\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseItems: [],\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id)\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With basic collapse you can open multiple items at a time. to add\r\n              bottom border use <code> .collapse-bordered</code> as a wrapper of\r\n              collapse cards.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {renderCollapse}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseDefault}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n","import React from \"react\"\r\nimport {\r\n  UncontrolledCollapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseUncontrolled } from \"./CollapseSourceCode\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Collapse Uncontrolled</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With uncontrolled collapse you don't have to manage state you can\r\n              toggle collapse with <code>id</code> and <code>toggler</code>\r\n              attribute\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  <Card>\r\n                    <CardHeader id=\"item-1\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 1\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-1\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-2\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 2\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-2\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-3\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 3\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-3\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-4\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 4\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-4\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseUncontrolled}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionShadow } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionShadowItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            open: collapseItem.id === this.state.collapseID\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Shadow</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              use class <code>.accordion-shadow</code> as a wrapper of your\r\n              accordion/collapse card for shadow.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered accordion-shadow\">\r\n                  {accordionShadowItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionShadow}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionBorder } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionBorderItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames(\"collapse-border-item\", {\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Border</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-border-item</code> with your collapsible\r\n              card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionBorderItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionBorder}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionMargin } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionMarginItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <div className=\"collapse-margin\" key={collapseItem.id}>\r\n          <Card\r\n            onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            className={classnames({\r\n              \"collapse-collapsed\":\r\n                this.state.status === \"Closed\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              \"collapse-shown\":\r\n                this.state.status === \"Opened\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              closing:\r\n                this.state.status === \"Closing...\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              opening:\r\n                this.state.status === \"Opening...\" &&\r\n                this.state.collapseID === collapseItem.id\r\n            })}\r\n          >\r\n            <CardHeader>\r\n              <CardTitle className=\"lead collapse-title collapsed\">\r\n                {collapseItem.title}\r\n              </CardTitle>\r\n              <ChevronDown size={15} className=\"collapse-icon\" />\r\n            </CardHeader>\r\n            <Collapse\r\n              isOpen={collapseItem.id === this.state.collapseID}\r\n              onEntering={() => this.onEntering(collapseItem.id)}\r\n              onEntered={() => this.onEntered(collapseItem.id)}\r\n              onExiting={() => this.onExiting(collapseItem.id)}\r\n              onExited={() => this.onExited(collapseItem.id)}\r\n            >\r\n              <CardBody>{collapseItem.content}</CardBody>\r\n            </Collapse>\r\n          </Card>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Margin</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-Margin</code> as a wrapper of your\r\n              collapseible card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionMarginItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionMargin}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionHover } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionHoverItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          onMouseEnter={() => this.toggleCollapse(collapseItem.id)}\r\n          key={collapseItem.id}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Hover</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              To create a hover accordion call <code>.toggleCollapse</code> on{\" \"}\r\n              <code>mouseEnter</code> instead of <code>onClick</code>\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionHoverItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionHover}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n","import React from \"react\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport CollapseDefault from \"./CollapseDefault\"\r\nimport CollapseUncontrolled from \"./CollapseUncontrolled\"\r\nimport Accordion from \"./Accordion\"\r\nimport AccordionShadow from \"./AccordionShadow\"\r\nimport AccordionBorder from \"./AccordionBorder\"\r\nimport AccordionMargin from \"./AccordionMargin\"\r\nimport AccordionHover from \"./AccordionHover\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Collaspe extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Collapse\"\r\n          breadCrumbParent=\"Components\"\r\n          breadCrumbActive=\"Collapse\"\r\n        />\r\n        <Row>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseDefault />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseUncontrolled />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <Accordion />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionShadow />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionBorder />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionMargin />\r\n          </Col>\r\n        </Row>\r\n        <AccordionHover />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Collaspe\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(i){var t=i.util.clone(i.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function n(t,n){return t=t.replace(/<S>/g,function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"}).replace(/<BRACES>/g,function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"}).replace(/<SPREAD>/g,function(){return e}),RegExp(t,n)}e=n(e).source,i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=n(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.jsx.tag.inside.comment=t.comment,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:n(\"<SPREAD>\"),inside:i.languages.jsx}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:n(\"=<BRACES>\"),inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},r=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&r(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||r(t.tokens)})}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"];\n\nvar _transitionStatusToCl;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread(_objectSpread({}, Transition.propTypes), {}, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread(_objectSpread({}, Transition.defaultProps), {}, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return /*#__PURE__*/React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread(_objectSpread({}, childProps.style), style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\nvar omitKeys = ['toggleEvents', 'defaultOpen'];\nvar propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledCollapse;\n}(Component);\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\nexport default UncontrolledCollapse;"],"sourceRoot":""}