{"version":3,"sources":["../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js","extensions/pagination/BasicPagination.js","extensions/pagination/SepratedPagination.js","extensions/pagination/PaginationIconText.js","extensions/pagination/PaginationIcon.js","extensions/pagination/PaginationSuccess.js","extensions/pagination/PaginationDanger.js","extensions/pagination/PaginationInfo.js","extensions/pagination/PaginationWarning.js","extensions/pagination/PaginationPositions.js","extensions/pagination/PaginationSizes.js","extensions/pagination/Pagination.js","extensions/extensionsHeader.js"],"names":["PaginationBoxView","evt","selected","pageCount","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","index","leftSide","rightSide","page","breakView","createPageView","key","onClick","initialSelected","props","this","initialPage","disableInitialCallback","extraAriaContext","console","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","state","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","handlePageSelected","bind","href","ariaLabel","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","className","tabIndex","role","onKeyPress","aria-disabled","Component","propTypes","PropTypes","onPageChange","func","defaultProps","PageView","ariaCurrent","aria-label","aria-current","isRequired","BreakView","BasicPagination","Card","CardHeader","CardTitle","CardBody","React","SepratedPagination","size","Previous","Fragment","Next","IconTextPagination","IconPagination","PaginationSuccess","PaginationDanger","PaginationInfo","PaginationWarning","PaginationPositions","Row","Col","xl","md","PaginationSizes","lg","sm","ReactPaginate","title","subTitle","link","PaginationIconText","PaginationIcon","ExtensionsHeader","data-tour","target","rel"],"mappings":"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","file":"static/js/84.d7e9e955.chunk.js","sourcesContent":["import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nclass BasicPagination extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Basic</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.basic-pagination</code> to create a\r\n            basic pagination.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={\"previous\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination basic-pagination pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default BasicPagination\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\nclass SepratedPagination extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Seprated</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.separated-pagination</code> to\r\n            create a separated pagination.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size=\"15\" />}\r\n            nextLabel={<ChevronRight size=\"15\" />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination separated-pagination pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default SepratedPagination\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronsLeft, ChevronsRight } from \"react-feather\"\r\n\r\nconst Previous = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <ChevronsLeft size={15} /> {\"\"}\r\n      <span className=\"align-middle d-none d-md-inline-block\">Prev</span>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst Next = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <span className=\"align-middle d-none d-md-inline-block\">Next </span>\r\n      <ChevronsRight size={15} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nclass IconTextPagination extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>With icon and text</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.icon-text-pagination</code> to\r\n            create a pagination with icon and text.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<Previous />}\r\n            nextLabel={<Next />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-text-pagination pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default IconTextPagination\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass IconPagination extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Icon Only</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.icon-pagination</code> to create a\r\n            pagination with only icon.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default IconPagination\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationSuccess extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Success</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-success</code>.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-success pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationSuccess\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationDanger extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Danger</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-danger</code>.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-danger pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationDanger\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationInfo extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Info</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-info</code>.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-info pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationInfo\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationWarning extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Warning</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-warning</code>.\r\n          </p>\r\n          <ReactPaginate\r\n            previousLabel={<ChevronLeft size={15} />}\r\n            nextLabel={<ChevronRight size={15} />}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={10}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={\r\n              \"vx-pagination icon-pagination pagination-warning pagination-center mt-3\"\r\n            }\r\n            activeClassName={\"active\"}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationWarning\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationPositions extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Positions</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes{\" \"}\r\n            <code>.vx-pagination.pagination-[start|center|end]</code> to\r\n            position your pagination.\r\n          </p>\r\n          <Row>\r\n            <Col xl=\"4\" md=\"12\">\r\n              <h5 className=\"text-left\">Left Aligned</h5>\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-start mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n            <Col xl=\"4\" md=\"12\">\r\n              <h5 className=\"text-center\">Center Aligned</h5>\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-center mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n            <Col xl=\"4\" md=\"12\">\r\n              <h5 className=\"text-right\">Right Aligned</h5>\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-end mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationPositions\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronLeft, ChevronRight } from \"react-feather\"\r\n\r\nclass PaginationSizes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Sizes</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <p>\r\n            Use classes <code>.vx-pagination.pagination-[lg|sm]</code> to change\r\n            size of your pagination.\r\n          </p>\r\n          <Row>\r\n            <Col lg=\"4\" sm=\"12\">\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-lg mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n            <Col lg=\"4\" sm=\"12\">\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\"vx-pagination icon-pagination mt-2\"}\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n            <Col lg=\"4\" sm=\"12\">\r\n              <ReactPaginate\r\n                previousLabel={<ChevronLeft size={15} />}\r\n                nextLabel={<ChevronRight size={15} />}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={5}\r\n                marginPagesDisplayed={5}\r\n                pageRangeDisplayed={0}\r\n                containerClassName={\r\n                  \"vx-pagination icon-pagination pagination-sm mt-2\"\r\n                }\r\n                activeClassName={\"active\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PaginationSizes\r\n","import React from \"react\"\r\nimport ExtensionsHeader from \"../extensionsHeader\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport BasicPagination from \"./BasicPagination\"\r\nimport SepratedPagination from \"./SepratedPagination\"\r\nimport PaginationIconText from \"./PaginationIconText\"\r\nimport PaginationIcon from \"./PaginationIcon\"\r\nimport PaginationSuccess from \"./PaginationSuccess\"\r\nimport PaginationDanger from \"./PaginationDanger\"\r\nimport PaginationInfo from \"./PaginationInfo\"\r\nimport PaginationWarning from \"./PaginationWarning\"\r\nimport PaginationPositions from \"./PaginationPositions\"\r\nimport PaginationSizes from \"./PaginationSizes\"\r\n\r\nimport \"../../assets/scss/plugins/extensions/react-paginate.scss\"\r\nclass ReactPaginate extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ExtensionsHeader\r\n          title=\"React Paginate\"\r\n          subTitle=\"A ReactJS component that creates a pagination\"\r\n          link=\"https://github.com/AdeleD/react-paginate\"\r\n        />\r\n\r\n        <Row>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <BasicPagination />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <SepratedPagination />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationIconText />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationIcon />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationSuccess />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationDanger />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationInfo />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n            <PaginationWarning />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <PaginationPositions />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <PaginationSizes />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ReactPaginate\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import { Star } from \"react-feather\"\r\n\r\nclass ExtensionsHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"mb-2\">\r\n        <Col sm=\"12\" className=\"ml-50\">\r\n          <p\r\n            className=\"font-medium-5 mt-1 extension-title\"\r\n            data-tour=\"extension-title\"\r\n          >\r\n            {this.props.title}\r\n          </p>\r\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {this.props.subTitle}\r\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \r\n          }\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default ExtensionsHeader\r\n"],"sourceRoot":""}