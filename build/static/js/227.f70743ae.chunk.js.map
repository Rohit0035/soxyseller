{"version":3,"sources":["views/apps/category/AddSubCategory.js"],"names":["AddSubCategory","props","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","data","FormData","append","state","desc","productcategory","sortorder","axiosConfig","post","headers","localStorage","getItem","then","response","history","push","catch","error","product_img","productC","a","get","className","col-sm-6","onClick","onSubmit","this","lg","md","required","type","onChange","map","prodCategory","key","_id","placeholder","sm","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/227.f70743ae.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  CustomInput,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { relativeTimeThreshold } from \"moment\";\r\n\r\nexport class AddSubCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      sortorder: \"\",\r\n      desc: \"\",\r\n      productcategory: \"\",\r\n      product_img: \"\",\r\n      status: \"\",\r\n      selectedFile: null,\r\n      selectedName: \"\",\r\n    };\r\n\r\n    this.state = {\r\n      productC: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //Product Category\r\n    axiosConfig\r\n      .get(\"/allcatByseller\", {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ productC: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"name\", this.state.name);\r\n    data.append(\"desc\", this.state.desc);\r\n    data.append(\"productcategory\", this.state.productcategory);\r\n    data.append(\"sortorder\", this.state.sortorder);\r\n    data.append(\"status\", this.state.status);\r\n    if (this.state.selectedFile !== null) {\r\n      data.append(\r\n        \"product_img\",\r\n        this.state.selectedFile,\r\n        this.state.selectedName\r\n      );\r\n    }\r\n    //   for (var value of data.values()) {\r\n    //     console.log(value);\r\n    //  }\r\n    axiosConfig\r\n      .post(\"/addproductsubcategory\", data, {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/category/subCategory\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add New Sub-Category\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() => history.push(\"/app/category/subCategory\")}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label> Main Category</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"productcategory\"\r\n                    value={this.state.productcategory}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Sub-Category....</option>\r\n                    {this.state.productC.map((prodCategory) => (\r\n                      <option key={prodCategory._id} value={prodCategory._id}>\r\n                        {prodCategory.name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Category Name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Category\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"textarea\"\r\n                    name=\"desc\"\r\n                    value={this.state.desc}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Sort Order</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    placeholder=\"Sort Order\"\r\n                    name=\"sortorder\"\r\n                    value={this.state.sortorder}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Image</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"file\"\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.changeHandler1(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Inactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mb-1\"\r\n                >\r\n                  Add Sub-Category\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddSubCategory;\r\n"],"sourceRoot":""}