{"version":3,"sources":["views/charts/chart-js/lineChart.js","views/charts/chart-js/BarChart.js","views/charts/chart-js/HorizontalBarChart.js","views/charts/chart-js/PieChart.js","views/charts/chart-js/DoughnutChart.js","views/charts/chart-js/RadarChart.js","views/charts/chart-js/PolarChart.js","views/charts/chart-js/BubbleChart.js","views/charts/chart-js/ScatterChart.js","views/charts/chart-js/ChartJS.js"],"names":["data","labels","datasets","label","borderColor","options","maintainAspectRatio","responsive","legend","position","scales","xAxes","display","gridLines","color","scaleLabel","yAxes","title","text","LineCharts","Card","CardHeader","CardTitle","CardBody","height","React","Component","backgroundColor","elements","rectangle","borderWidth","borderSkipped","responsiveAnimationDuration","ticks","stepSize","BarCharts","HorizontalBarCharts","PieCharts","DoughnutCharts","fill","pointBorderColor","pointBackgroundColor","tooltips","callbacks","tooltipItems","datasetIndex","yLabel","scale","reverse","beginAtZero","RadarChart","animation","animateRotate","PolarChart","duration","x","y","r","labelString","BubbleChart","pointBorderWidth","pointHoverBorderWidth","pointRadius","drawTicks","ScatterChart","ChartJS","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","href","target","rel","lg","BarChart","HorizontalBarChart","PieChart","DoughnutChart"],"mappings":"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","file":"static/js/264.de0d2563.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nconst $primary = \"#7367F0\",\r\n  $success = \"#28C76F\",\r\n  $danger = \"#EA5455\",\r\n  $warning = \"#FF9F43\",\r\n  $label_color = \"#1E1E1E\",\r\n  grid_line_color = \"#dae1e7\"\r\n\r\nconst data = {\r\n  labels: [1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\r\n  datasets: [\r\n    {\r\n      label: \"Africa\",\r\n      data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\r\n      borderColor: $primary\r\n    },\r\n    {\r\n      data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 5267],\r\n      label: \"Asia\",\r\n      borderColor: $success\r\n    },\r\n    {\r\n      data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\r\n      label: \"Europe\",\r\n      borderColor: $danger\r\n    },\r\n    {\r\n      data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\r\n      label: \"Latin America\",\r\n      borderColor: $warning\r\n    },\r\n    {\r\n      data: [6, 3, 2, 2, 7, 26, 82, 172, 312, 433],\r\n      label: \"North America\",\r\n      borderColor: $label_color\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  maintainAspectRatio: false,\r\n  responsive: true,\r\n  legend: {\r\n    position: \"top\"\r\n  },\r\n\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: true,\r\n        gridLines: {\r\n          color: grid_line_color\r\n        },\r\n        scaleLabel: {\r\n          display: true\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: true,\r\n        gridLines: {\r\n          color: grid_line_color\r\n        },\r\n        scaleLabel: {\r\n          display: true\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  title: {\r\n    display: true,\r\n    text: \"World population per region (in millions)\"\r\n  }\r\n}\r\n\r\nclass LineCharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Line Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Line data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default LineCharts\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { Bar } from \"react-chartjs-2\"\r\n\r\nconst $primary = \"#7367F0\",\r\n  $success = \"#28C76F\",\r\n  $danger = \"#EA5455\",\r\n  $warning = \"#FF9F43\",\r\n  $label_color = \"#1E1E1E\",\r\n  grid_line_color = \"#dae1e7\"\r\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\r\n\r\nconst data = {\r\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n  datasets: [\r\n    {\r\n      label: \"Population (millions)\",\r\n      data: [2478, 5267, 734, 784, 433],\r\n      backgroundColor: themeColors,\r\n      borderColor: \"transparent\"\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  elements: {\r\n    rectangle: {\r\n      borderWidth: 2,\r\n      borderSkipped: \"left\"\r\n    }\r\n  },\r\n  responsive: true,\r\n  responsiveAnimationDuration: 500,\r\n\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: true,\r\n        gridLines: {\r\n          color: grid_line_color\r\n        },\r\n        scaleLabel: {\r\n          display: true\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: true,\r\n        gridLines: {\r\n          color: grid_line_color\r\n        },\r\n        scaleLabel: {\r\n          display: true\r\n        },\r\n        ticks: {\r\n          stepSize: 1000\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: true,\r\n    text: \"Predicted world population (millions) in 2050\"\r\n  },\r\n  legend: { display: false }\r\n}\r\n\r\nclass BarCharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Bar Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Bar data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default BarCharts\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { HorizontalBar } from \"react-chartjs-2\"\r\n\r\nconst $primary = \"#7367F0\",\r\n  $success = \"#28C76F\",\r\n  $danger = \"#EA5455\",\r\n  $warning = \"#FF9F43\",\r\n  $label_color = \"#1E1E1E\",\r\n  grid_line_color = \"#dae1e7\"\r\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\r\n\r\nconst data = {\r\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n  datasets: [\r\n    {\r\n      label: \"Population (millions)\",\r\n      data: [2478, 5267, 734, 784, 433],\r\n      backgroundColor: themeColors,\r\n      borderColor: \"transparent\"\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  elements: {\r\n    rectangle: {\r\n      borderWidth: 2,\r\n      borderSkipped: \"right\"\r\n    }\r\n  },\r\n  responsive: true,\r\n  responsiveAnimationDuration: 500,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: true,\r\n        gridLines: {\r\n          color: grid_line_color\r\n        },\r\n        scaleLabel: {\r\n          display: true\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: true,\r\n        gridLines: {\r\n          color: grid_line_color\r\n        },\r\n        scaleLabel: {\r\n          display: true\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  title: {\r\n    display: true,\r\n    text: \"Predicted world population (millions) in 2050\"\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n}\r\n\r\nclass HorizontalBarCharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Horizontal Bar Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <HorizontalBar data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default HorizontalBarCharts\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { Pie } from \"react-chartjs-2\"\r\n\r\nconst $primary = \"#7367F0\",\r\n  $success = \"#28C76F\",\r\n  $danger = \"#EA5455\",\r\n  $warning = \"#FF9F43\",\r\n  $label_color = \"#1E1E1E\"\r\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\r\n\r\nconst data = {\r\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      data: [2478, 5267, 734, 784, 433],\r\n      backgroundColor: themeColors\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  responsive: true,\r\n  responsiveAnimationDuration: 500,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: true,\r\n    text: \"Predicted world population (millions) in 2050\"\r\n  }\r\n}\r\n\r\nclass PieCharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Pie Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Pie data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PieCharts\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { Doughnut } from \"react-chartjs-2\"\r\n\r\nconst $primary = \"#7367F0\",\r\n  $success = \"#28C76F\",\r\n  $danger = \"#EA5455\",\r\n  $warning = \"#FF9F43\",\r\n  $label_color = \"#1E1E1E\"\r\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\r\n\r\nconst data = {\r\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      data: [2478, 5267, 734, 784, 433],\r\n      backgroundColor: themeColors\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  maintainAspectRatio: false,\r\n  responsive: true,\r\n  responsiveAnimationDuration: 500,\r\n  title: {\r\n    display: true,\r\n    text: \"Predicted world population (millions) in 2050\"\r\n  }\r\n}\r\n\r\nclass DoughnutCharts extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Doughnut Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Doughnut data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default DoughnutCharts\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { Radar } from \"react-chartjs-2\"\r\n\r\nconst data = {\r\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n  datasets: [\r\n    {\r\n      label: \"1950\",\r\n      fill: true,\r\n      backgroundColor: \"rgba(179,181,198,0.2)\",\r\n      borderColor: \"rgba(179,181,198,1)\",\r\n      pointBorderColor: \"#fff\",\r\n      pointBackgroundColor: \"rgba(179,181,198,1)\",\r\n      data: [8.77, 55.61, 21.69, 6.62, 6.82]\r\n    },\r\n    {\r\n      label: \"2050\",\r\n      fill: true,\r\n      backgroundColor: \"rgba(255,99,132,0.2)\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      pointBorderColor: \"#fff\",\r\n      pointBackgroundColor: \"rgba(255,99,132,1)\",\r\n      data: [25.48, 54.16, 7.61, 8.06, 4.45]\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  responsive: true,\r\n  responsiveAnimationDuration: 500,\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    callbacks: {\r\n      label: function(tooltipItems, data) {\r\n        return (\r\n          data.datasets[tooltipItems.datasetIndex].label +\r\n          \": \" +\r\n          tooltipItems.yLabel\r\n        )\r\n      }\r\n    }\r\n  },\r\n  scale: {\r\n    reverse: false,\r\n    ticks: {\r\n      beginAtZero: true,\r\n      stepSize: 10\r\n    }\r\n  },\r\n  title: {\r\n    display: true,\r\n    text: \"Distribution in % of world population\"\r\n  }\r\n}\r\n\r\nclass RadarChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Radar Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Radar data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default RadarChart\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { Polar } from \"react-chartjs-2\"\r\n\r\nconst $primary = \"#7367F0\",\r\n  $success = \"#28C76F\",\r\n  $danger = \"#EA5455\",\r\n  $warning = \"#FF9F43\",\r\n  $label_color = \"#1E1E1E\"\r\nconst themeColors = [$primary, $success, $danger, $warning, $label_color]\r\n\r\nconst data = {\r\n  labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\r\n  datasets: [\r\n    {\r\n      label: \"Population (millions)\",\r\n      backgroundColor: themeColors,\r\n      data: [2478, 5267, 734, 784, 433]\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  responsive: true,\r\n  responsiveAnimationDuration: 500,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: true,\r\n    text: \"Predicted world population (millions) in 2050\"\r\n  },\r\n  legend: {\r\n    position: \"top\"\r\n  },\r\n  scale: {\r\n    ticks: {\r\n      beginAtZero: true,\r\n      stepSize: 2000\r\n    },\r\n    reverse: false\r\n  },\r\n  animation: {\r\n    animateRotate: false\r\n  }\r\n}\r\n\r\nclass PolarChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Polar Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Polar data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default PolarChart\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { Bubble } from \"react-chartjs-2\"\r\n\r\nconst data = {\r\n  animation: {\r\n    duration: 10000\r\n  },\r\n  datasets: [\r\n    {\r\n      label: [\"China\"],\r\n      backgroundColor: \"rgba(255,221,50,0.2)\",\r\n      borderColor: \"rgba(255,221,50,1)\",\r\n      data: [\r\n        {\r\n          x: 21269017,\r\n          y: 5.245,\r\n          r: 15\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label: [\"Denmark\"],\r\n      backgroundColor: \"rgba(60,186,159,0.2)\",\r\n      borderColor: \"rgba(60,186,159,1)\",\r\n      data: [\r\n        {\r\n          x: 258702,\r\n          y: 7.526,\r\n          r: 10\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label: [\"Germany\"],\r\n      backgroundColor: \"rgba(0,0,0,0.2)\",\r\n      borderColor: \"#000\",\r\n      data: [\r\n        {\r\n          x: 3979083,\r\n          y: 6.994,\r\n          r: 15\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label: [\"Japan\"],\r\n      backgroundColor: \"rgba(193,46,12,0.2)\",\r\n      borderColor: \"rgba(193,46,12,1)\",\r\n      data: [\r\n        {\r\n          x: 4931877,\r\n          y: 5.921,\r\n          r: 15\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: true,\r\n    text: \"Predicted world population (millions) in 2050\"\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        display: true,\r\n        gridLines: {\r\n          color: \"#dae1e7\"\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"GDP (PPP)\"\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        display: true,\r\n        gridLines: {\r\n          color: \"#dae1e7\"\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"Happiness\"\r\n        },\r\n        ticks: {\r\n          stepSize: 0.5\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nclass BubbleChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Bubble Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Bubble data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default BubbleChart\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport { Scatter } from \"react-chartjs-2\"\r\n\r\nconst scatter_grid_color = \"#f3f3f3\",\r\n  $scatter_point_light = \"#D1D4DB\",\r\n  $scatter_point_dark = \"#5175E0\"\r\n\r\nconst data = {\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      data: [\r\n        {\r\n          x: 65,\r\n          y: 28\r\n        },\r\n        {\r\n          x: 59,\r\n          y: 48\r\n        },\r\n        {\r\n          x: 80,\r\n          y: 40\r\n        },\r\n        {\r\n          x: 81,\r\n          y: 19\r\n        },\r\n        {\r\n          x: 56,\r\n          y: 86\r\n        },\r\n        {\r\n          x: 55,\r\n          y: 27\r\n        },\r\n        {\r\n          x: 40,\r\n          y: 89\r\n        }\r\n      ],\r\n      backgroundColor: \"rgba(209,212,219,.3)\",\r\n      borderColor: \"transparent\",\r\n      pointBorderColor: $scatter_point_light,\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 2,\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 4\r\n    },\r\n    {\r\n      label: \"My Second dataset\",\r\n      data: [\r\n        {\r\n          x: 45,\r\n          y: 17\r\n        },\r\n        {\r\n          x: 25,\r\n          y: 62\r\n        },\r\n        {\r\n          x: 16,\r\n          y: 78\r\n        },\r\n        {\r\n          x: 36,\r\n          y: 88\r\n        },\r\n        {\r\n          x: 67,\r\n          y: 26\r\n        },\r\n        {\r\n          x: 18,\r\n          y: 48\r\n        },\r\n        {\r\n          x: 76,\r\n          y: 73\r\n        }\r\n      ],\r\n      backgroundColor: \"rgba(81,117,224,.6)\",\r\n      borderColor: \"transparent\",\r\n      pointBorderColor: $scatter_point_dark,\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 2,\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 4\r\n    }\r\n  ]\r\n}\r\n\r\nconst options = {\r\n  responsive: true,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        position: \"top\",\r\n        gridLines: {\r\n          color: scatter_grid_color,\r\n          drawTicks: false\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"x axis\"\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        position: \"right\",\r\n        gridLines: {\r\n          color: scatter_grid_color,\r\n          drawTicks: false\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"y axis\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  maintainAspectRatio: false\r\n}\r\n\r\nclass ScatterChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Scatter Chart</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Scatter data={data} options={options} height={300} />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default ScatterChart\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\nimport LineChart from \"./lineChart\"\r\nimport BarChart from \"./BarChart\"\r\nimport HorizontalBarChart from \"./HorizontalBarChart\"\r\nimport PieChart from \"./PieChart\"\r\nimport DoughnutChart from \"./DoughnutChart\"\r\nimport RadarChart from \"./RadarChart\"\r\nimport PolarChart from \"./PolarChart\"\r\nimport BubbleChart from \"./BubbleChart\"\r\nimport ScatterChart from \"./ScatterChart\"\r\n\r\nclass ChartJS extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"React ChartJS 2\"\r\n          breadCrumbParent=\"Charts\"\r\n          breadCrumbActive=\"ChartJS\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <p>\r\n              React wrapper for Chart.js. Click{\" \"}\r\n              <a\r\n                href=\"https://github.com/jerairrest/react-chartjs-2\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                here\r\n              </a>{\" \"}\r\n              for github repo.\r\n            </p>\r\n          </Col>\r\n          <Col lg=\"6\" sm=\"12\">\r\n            <LineChart />\r\n          </Col>\r\n          <Col lg=\"6\" sm=\"12\">\r\n            <BarChart />\r\n          </Col>\r\n          <Col lg=\"6\" sm=\"12\">\r\n            <HorizontalBarChart />\r\n          </Col>\r\n          <Col lg=\"6\" sm=\"12\">\r\n            <PieChart />\r\n          </Col>\r\n          <Col lg=\"6\" sm=\"12\">\r\n            <DoughnutChart />\r\n          </Col>\r\n          <Col lg=\"6\" sm=\"12\">\r\n            <RadarChart />\r\n          </Col>\r\n          <Col lg=\"6\" sm=\"12\">\r\n            <PolarChart />\r\n          </Col>\r\n          <Col lg=\"6\" sm=\"12\">\r\n            <BubbleChart />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ScatterChart />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChartJS\r\n"],"sourceRoot":""}