{"version":3,"sources":["extensions/import-export/Import.js","extensions/extensionsHeader.js"],"names":["Uploader","props","useDropzone","accept","onDrop","acceptedFiles","reader","FileReader","onload","fileData","result","wb","XLSX","read","type","SheetNames","forEach","sheetName","rowObj","utils","sheet_to_row_object_array","Sheets","getTableData","name","length","readAsBinaryString","toast","error","getRootProps","getInputProps","className","size","Import","state","tableData","filteredData","value","arr","setState","handleFilter","e","data","target","filter","col","keys","Object","startsWithCondition","key","toString","toLowerCase","startsWith","includesCondition","includes","headArr","this","map","index","dataArr","renderTableBody","renderTd","renderTableHead","head","Fragment","title","subTitle","link","sm","onChange","responsive","React","Component","ExtensionsHeader","data-tour","href","rel"],"mappings":"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","file":"static/js/74.4ca3c9b0.chunk.js","sourcesContent":["import React from \"react\"\r\nimport ExtensionsHeader from \"../extensionsHeader\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Table,\r\n  CardHeader,\r\n  CardTitle,\r\n  Input\r\n} from \"reactstrap\"\r\nimport XLSX from \"xlsx\"\r\nimport { DownloadCloud, Search } from \"react-feather\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { toast, ToastContainer } from \"react-toastify\"\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport \"../../assets/scss/plugins/extensions/toastr.scss\"\r\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\"\r\n\r\nfunction Uploader(props) {\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \".xlsx, .xls, .csv\",\r\n    onDrop: acceptedFiles => {\r\n      var reader = new FileReader()\r\n      reader.onload = function() {\r\n        var fileData = reader.result\r\n        var wb = XLSX.read(fileData, { type: \"binary\" })\r\n\r\n        wb.SheetNames.forEach(function(sheetName) {\r\n          var rowObj = XLSX.utils.sheet_to_row_object_array(\r\n            wb.Sheets[sheetName]\r\n          )\r\n          props.getTableData(rowObj, acceptedFiles[0].name)\r\n        })\r\n      }\r\n      if (acceptedFiles.length) {\r\n        reader.readAsBinaryString(acceptedFiles[0])\r\n      } else {\r\n        toast.error(\"You can only upload .xlsx, .xls, .csv Files!\")\r\n      }\r\n    }\r\n  })\r\n  return (\r\n    <section className=\"pb-1\">\r\n      <div {...getRootProps({ className: \"dropzone py-3 flex-column\" })}>\r\n        <input {...getInputProps()} />\r\n        <DownloadCloud className=\"text-light\" size={50} />\r\n        <h4 className=\"mb-0 mt-2\">Drop Excel File or Browse</h4>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nclass Import extends React.Component {\r\n  state = {\r\n    tableData: [],\r\n    filteredData: [],\r\n    value: \"\",\r\n    name: \"\"\r\n  }\r\n\r\n  getTableData = (arr, name) => {\r\n    this.setState({ tableData: arr, name })\r\n  }\r\n\r\n  handleFilter = e => {\r\n    let data = this.state.tableData\r\n    let filteredData = []\r\n    let value = e.target.value\r\n    this.setState({ value })\r\n\r\n    if (value.length) {\r\n      filteredData = data.filter(col => {\r\n        let keys = Object.keys(col)\r\n\r\n        let startsWithCondition = keys.filter(key => {\r\n          return col[key]\r\n            .toString()\r\n            .toLowerCase()\r\n            .startsWith(value.toLowerCase())\r\n        })\r\n\r\n        let includesCondition = keys.filter(key =>\r\n          col[key]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        )\r\n\r\n        if (startsWithCondition.length) return col[startsWithCondition]\r\n        else if (!startsWithCondition && includesCondition.length)\r\n          return col[includesCondition]\r\n        else return null\r\n      })\r\n      this.setState({ value, filteredData })\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let headArr = this.state.tableData.length\r\n      ? this.state.tableData.map((col, index) => {\r\n          if (index === 0) return [...Object.keys(col)]\r\n          else return null\r\n        })\r\n      : []\r\n    let dataArr = this.state.value.length\r\n      ? this.state.filteredData\r\n      : this.state.tableData.length && !this.state.value.length\r\n      ? this.state.tableData\r\n      : null\r\n    let renderTableBody =\r\n      dataArr !== null && dataArr.length\r\n        ? dataArr.map((col, index) => {\r\n            let keys = Object.keys(col)\r\n            let renderTd = keys.map((key, index) => (\r\n              <td key={index}>{col[key]}</td>\r\n            ))\r\n            return <tr key={index}>{renderTd}</tr>\r\n          })\r\n        : null\r\n\r\n    let renderTableHead = headArr.length\r\n      ? headArr[0].map((head, index) => {\r\n          return <th key={index}>{head}</th>\r\n        })\r\n      : null\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ExtensionsHeader\r\n          title=\"XLSX\"\r\n          subTitle=\"Xlsx is a parser and writer for various spreadsheet formats\"\r\n          link=\"https://github.com/AdeleD/react-paginate\"\r\n        />\r\n        <Row className=\"import-component\">\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm=\"12\">\r\n                    <Uploader getTableData={this.getTableData} />\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          {this.state.tableData.length ? (\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <CardHeader className=\"justify-content-between flex-wrap\">\r\n                  <CardTitle>{this.state.name}</CardTitle>\r\n                  <div className=\"filter position-relative has-icon-left\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      value={this.state.value}\r\n                      onChange={e => this.handleFilter(e)}\r\n                    />\r\n                    <div className=\"form-control-position\">\r\n                      <Search size={15} />\r\n                    </div>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Table className=\"table-hover-animation\" responsive>\r\n                    <thead>\r\n                      <tr>{renderTableHead}</tr>\r\n                    </thead>\r\n                    <tbody>{renderTableBody}</tbody>\r\n                  </Table>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          ) : null}\r\n          <ToastContainer />\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Import\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import { Star } from \"react-feather\"\r\n\r\nclass ExtensionsHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"mb-2\">\r\n        <Col sm=\"12\" className=\"ml-50\">\r\n          <p\r\n            className=\"font-medium-5 mt-1 extension-title\"\r\n            data-tour=\"extension-title\"\r\n          >\r\n            {this.props.title}\r\n          </p>\r\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {this.props.subTitle}\r\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \r\n          }\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default ExtensionsHeader\r\n"],"sourceRoot":""}