{"version":3,"sources":["components/@vuexy/chips/ChipComponent.js","redux/actions/data-list/index.js","views/ui-elements/data-list/DataListSidebar.js","views/ui-elements/data-list/DataListConfig.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["Chip","closeChip","e","target","closest","remove","className","this","props","color","avatarImg","avatarText","avatarIcon","avatarColor","src","alt","height","width","text","closable","onClick","closableIcon","React","Component","getData","params","dispatch","a","axios","get","then","response","type","data","totalPages","DataListSidebar","state","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","obj","updateData","addData","Object","keys","dataParams","length","page","perPage","handleSidebar","prevProps","prevState","setState","show","classnames","size","options","wheelPropagation","thumbView","FormGroup","htmlFor","hidden","onChange","URL","createObjectURL","files","Button","Label","for","Input","value","placeholder","outline","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","UncontrolledDropdown","DropdownToggle","DropdownMenu","tag","right","DropdownItem","index","total","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","minWidth","cell","title","Progress","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","filterData","undefined","history","push","boolean","deleteData","urlPrefix","parseInt","handlePagination","getInitialData","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","label","dataList","filteredData","connect","post","getState","CheckBoxesVuexy","defaultChecked","checked","disabled"],"mappings":"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","file":"static/js/25.818eff1c.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nclass Chip extends React.Component {\r\n  closeChip = e => {\r\n    e.target.closest(\".chip\").remove()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`chip ${this.props.className} ${\r\n          this.props.color ? `chip-${this.props.color}` : null\r\n        }`}\r\n      >\r\n        <div className=\"chip-body\">\r\n          {(!this.props.avatarImg && this.props.avatarText) ||\r\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\r\n            <div\r\n              className={`avatar ${\r\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\r\n              }`}\r\n            >\r\n              <div className=\"avatar-content\">\r\n                {this.props.avatarText ? this.props.avatarText : null}\r\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\r\n              </div>\r\n            </div>\r\n          ) : this.props.avatarImg ? (\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={this.props.avatarImg}\r\n                alt=\"chipImg\"\r\n                height=\"20\"\r\n                width=\"20\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"chip-text\">{this.props.text}</div>\r\n          {this.props.closable ? (\r\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\r\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chip\r\n","import axios from \"axios\"\r\n\r\nexport const getData = params => {\r\n  return async dispatch => {\r\n    await axios.get(\"/api/datalist/data\", params).then(response => {\r\n      dispatch({\r\n        type: \"GET_DATA\",\r\n        data: response.data.data,\r\n        totalPages: response.data.totalPages,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  return async dispatch => {\r\n    await axios.get(\"/api/datalist/initial-data\").then(response => {\r\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterData = value => {\r\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/datalist/delete-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"DELETE_DATA\", obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateData = obj => {\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .post(\"/api/datalist/update-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"UPDATE_DATA\", obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const addData = obj => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().dataList.params\r\n    axios\r\n      .post(\"/api/datalist/add-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"ADD_DATA\", obj })\r\n        dispatch(getData(params))\r\n      })\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport classnames from \"classnames\"\r\n\r\nclass DataListSidebar extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    category: \"Audio\",\r\n    order_status: \"pending\",\r\n    price: \"\",\r\n    img: \"\",\r\n    popularity: {\r\n      popValue: \"\"\r\n    }\r\n  }\r\n\r\n  addNew = false\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.data !== null && prevProps.data === null) {\r\n      if (this.props.data.id !== prevState.id) {\r\n        this.setState({ id: this.props.data.id })\r\n      }\r\n      if (this.props.data.name !== prevState.name) {\r\n        this.setState({ name: this.props.data.name })\r\n      }\r\n      if (this.props.data.category !== prevState.category) {\r\n        this.setState({ category: this.props.data.category })\r\n      }\r\n      if (this.props.data.popularity.popValue !== prevState.popularity) {\r\n        this.setState({\r\n          popularity: {\r\n            ...this.state.popularity,\r\n            popValue: this.props.data.popularity.popValue\r\n          }\r\n        })\r\n      }\r\n      if (this.props.data.order_status !== prevState.order_status) {\r\n        this.setState({ order_status: this.props.data.order_status })\r\n      }\r\n      if (this.props.data.price !== prevState.price) {\r\n        this.setState({ price: this.props.data.price })\r\n      }\r\n      if (this.props.data.img !== prevState.img) {\r\n        this.setState({ img: this.props.data.img })\r\n      }\r\n    }\r\n    if (this.props.data === null && prevProps.data !== null) {\r\n      this.setState({\r\n        id: \"\",\r\n        name: \"\",\r\n        category: \"Audio\",\r\n        order_status: \"pending\",\r\n        price: \"\",\r\n        img: \"\",\r\n        popularity: {\r\n          popValue: \"\"\r\n        }\r\n      })\r\n    }\r\n    if (this.addNew) {\r\n      this.setState({\r\n        id: \"\",\r\n        name: \"\",\r\n        category: \"Audio\",\r\n        order_status: \"pending\",\r\n        price: \"\",\r\n        img: \"\",\r\n        popularity: {\r\n          popValue: \"\"\r\n        }\r\n      })\r\n    }\r\n    this.addNew = false\r\n  }\r\n\r\n  handleSubmit = obj => {\r\n    if (this.props.data !== null) {\r\n      this.props.updateData(obj)\r\n    } else {\r\n      this.addNew = true\r\n      this.props.addData(obj)\r\n    }\r\n    let params = Object.keys(this.props.dataParams).length\r\n      ? this.props.dataParams\r\n      : { page: 1, perPage: 4 }\r\n    this.props.handleSidebar(false, true)\r\n    this.props.getData(params)\r\n  }\r\n\r\n  render() {\r\n    let { show, handleSidebar, data } = this.props\r\n    let { name, category, order_status, price, popularity, img } = this.state\r\n    return (\r\n      <div\r\n        className={classnames(\"data-list-sidebar\", {\r\n          show: show\r\n        })}>\r\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\r\n          <h4>{data !== null ? \"UPDATE DATA\" : \"ADD NEW DATA\"}</h4>\r\n          <X size={20} onClick={() => handleSidebar(false, true)} />\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"data-list-fields px-2 mt-3\"\r\n          options={{ wheelPropagation: false }}>\r\n          {this.props.thumbView && img.length ? (\r\n            <FormGroup className=\"text-center\">\r\n              <img className=\"img-fluid\" src={img} alt={name} />\r\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\r\n                <label\r\n                  className=\"btn btn-flat-primary\"\r\n                  htmlFor=\"update-image\"\r\n                  color=\"primary\">\r\n                  Upload Image\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"update-image\"\r\n                    hidden\r\n                    onChange={e =>\r\n                      this.setState({\r\n                        img: URL.createObjectURL(e.target.files[0])\r\n                      })\r\n                    }\r\n                  />\r\n                </label>\r\n                <Button\r\n                  color=\"flat-danger\"\r\n                  onClick={() => this.setState({ img: \"\" })}>\r\n                  Remove Image\r\n                </Button>\r\n              </div>\r\n            </FormGroup>\r\n          ) : null}\r\n          <FormGroup>\r\n            <Label for=\"data-name\">Name</Label>\r\n            <Input\r\n              type=\"text\"\r\n              value={name}\r\n              placeholder=\"Apple IphoneX\"\r\n              onChange={e => this.setState({ name: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-category\">Category</Label>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"data-category\"\r\n              value={category}\r\n              onChange={e => this.setState({ category: e.target.value })}>\r\n              <option>Audio</option>\r\n              <option>Computers</option>\r\n              <option>Fitness</option>\r\n              <option>Appliances</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-popularity\">Popularity</Label>\r\n            <Input\r\n              type=\"number\"\r\n              value={popularity.popValue}\r\n              id=\"data-popularity\"\r\n              placeholder=\"0 - 100%\"\r\n              onChange={e =>\r\n                this.setState({\r\n                  popularity: { popularity, popValue: e.target.value }\r\n                })\r\n              }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-status\">Order Status</Label>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"data-status\"\r\n              value={order_status}\r\n              onChange={e => this.setState({ order_status: e.target.value })}>\r\n              <option>pending</option>\r\n              <option>canceled</option>\r\n              <option>delivered</option>\r\n              <option>on hold</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-price\">Price</Label>\r\n            <Input\r\n              type=\"number\"\r\n              value={price}\r\n              onChange={e => this.setState({ price: e.target.value })}\r\n              id=\"data-price\"\r\n              placeholder=\"69.99\"\r\n            />\r\n          </FormGroup>\r\n          {this.props.thumbView && img.length <= 0 ? (\r\n            <label\r\n              className=\"btn btn-primary\"\r\n              htmlFor=\"upload-image\"\r\n              color=\"primary\">\r\n              Upload Image\r\n              <input\r\n                type=\"file\"\r\n                id=\"upload-image\"\r\n                hidden\r\n                onChange={e =>\r\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\r\n                }\r\n              />\r\n            </label>\r\n          ) : null}\r\n        </PerfectScrollbar>\r\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\r\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\r\n            {data !== null ? \"Update\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            className=\"ml-1\"\r\n            color=\"danger\"\r\n            outline\r\n            onClick={() => handleSidebar(false, true)}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DataListSidebar\r\n","import React, { Component } from \"react\"\r\nimport {\r\n  Button,\r\n  Progress,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  Input\r\n} from \"reactstrap\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport classnames from \"classnames\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { history } from \"../../../history\"\r\nimport {\r\n  Edit,\r\n  Trash,\r\n  ChevronDown,\r\n  Plus,\r\n  Check,\r\n  ChevronLeft,\r\n  ChevronRight\r\n} from \"react-feather\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getData,\r\n  getInitialData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  filterData\r\n} from \"../../../redux/actions/data-list/\"\r\nimport Sidebar from \"./DataListSidebar\"\r\nimport Chip from \"../../../components/@vuexy/chips/ChipComponent\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\n\r\nimport \"../../../assets/scss/plugins/extensions/react-paginate.scss\"\r\nimport \"../../../assets/scss/pages/data-list.scss\"\r\n\r\nconst chipColors = {\r\n  \"on hold\": \"warning\",\r\n  delivered: \"success\",\r\n  pending: \"primary\",\r\n  canceled: \"danger\"\r\n}\r\n\r\nconst selectedStyle = {\r\n  rows: {\r\n    selectedHighlighStyle: {\r\n      backgroundColor: \"rgba(115,103,240,.05)\",\r\n      color: \"#7367F0 !important\",\r\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\r\n      \"&:hover\": {\r\n        transform: \"translateY(0px) !important\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst ActionsComponent = props => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      <Edit\r\n        className=\"cursor-pointer mr-1\"\r\n        size={20}\r\n        onClick={() => {\r\n          return props.currentData(props.row)\r\n        }}\r\n      />\r\n      <Trash\r\n        className=\"cursor-pointer\"\r\n        size={20}\r\n        onClick={() => {\r\n          props.deleteRow(props.row)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomHeader = props => {\r\n  return (\r\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\r\n      <div className=\"actions-left d-flex flex-wrap\">\r\n        <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\r\n          <DropdownToggle className=\"p-1\" color=\"primary\">\r\n            <span className=\"align-middle mr-1\">Actions</span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\r\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\r\n            <DropdownItem tag=\"a\">Print</DropdownItem>\r\n            <DropdownItem tag=\"a\">Export</DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n        <Button\r\n          className=\"add-new-btn\"\r\n          color=\"primary\"\r\n          onClick={() => props.handleSidebar(true, true)}\r\n          outline>\r\n          <Plus size={15} />\r\n          <span className=\"align-middle\">Add New</span>\r\n        </Button>\r\n      </div>\r\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\r\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\r\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\r\n            <span className=\"align-middle mx-50\">\r\n              {`${props.index[0]} - ${props.index[1]} of ${props.total}`}\r\n            </span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\r\n              4\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\r\n              10\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\r\n              15\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\r\n              20\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n        <div className=\"filter-section\">\r\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass DataListConfig extends Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.dataList.data.length !== state.data.length ||\r\n      state.currentPage !== props.parsedFilter.page\r\n    ) {\r\n      return {\r\n        data: props.dataList.data,\r\n        allData: props.dataList.filteredData,\r\n        totalPages: props.dataList.totalPages,\r\n        currentPage: parseInt(props.parsedFilter.page) - 1,\r\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\r\n        totalRecords: props.dataList.totalRecords,\r\n        sortIndex: props.dataList.sortIndex\r\n      }\r\n    }\r\n\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    data: [],\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    columns: [\r\n      {\r\n        name: \"Name\",\r\n        selector: \"name\",\r\n        sortable: true,\r\n        minWidth: \"300px\",\r\n        cell: row => (\r\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n            {row.name}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: \"Category\",\r\n        selector: \"category\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"Popularity\",\r\n        selector: \"popularity\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <Progress\r\n            className=\"w-100 mb-0\"\r\n            color={row.popularity.color}\r\n            value={row.popularity.popValue}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: \"Order Status\",\r\n        selector: \"order_status\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <Chip\r\n            className=\"m-0\"\r\n            color={chipColors[row.order_status]}\r\n            text={row.order_status}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: \"Price\",\r\n        selector: \"price\",\r\n        sortable: true,\r\n        cell: row => `$${row.price}`\r\n      },\r\n      {\r\n        name: \"Actions\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <ActionsComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    allData: [],\r\n    value: \"\",\r\n    rowsPerPage: 4,\r\n    sidebar: false,\r\n    currentData: null,\r\n    selected: [],\r\n    totalRecords: 0,\r\n    sortIndex: [],\r\n    addNew: \"\"\r\n  }\r\n\r\n  thumbView = this.props.thumbView\r\n\r\n  componentDidMount() {\r\n    this.props.getData(this.props.parsedFilter)\r\n    this.props.getInitialData()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.thumbView) {\r\n      this.thumbView = false\r\n      let columns = [\r\n        {\r\n          name: \"Image\",\r\n          selector: \"img\",\r\n          minWidth: \"220px\",\r\n          cell: row => <img src={row.img} height=\"100\" alt={row.name} />\r\n        },\r\n        {\r\n          name: \"Name\",\r\n          selector: \"name\",\r\n          sortable: true,\r\n          minWidth: \"250px\",\r\n          cell: row => (\r\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n              {row.name}\r\n            </p>\r\n          )\r\n        },\r\n        {\r\n          name: \"Category\",\r\n          selector: \"category\",\r\n          sortable: true\r\n        },\r\n        {\r\n          name: \"Popularity\",\r\n          selector: \"popularity\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <Progress\r\n              className=\"w-100 mb-0\"\r\n              color={row.popularity.color}\r\n              value={row.popularity.popValue}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: \"Order Status\",\r\n          selector: \"order_status\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <Chip\r\n              className=\"m-0\"\r\n              color={chipColors[row.order_status]}\r\n              text={row.order_status}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: \"Price\",\r\n          selector: \"price\",\r\n          sortable: true,\r\n          cell: row => `$${row.price}`\r\n        },\r\n        {\r\n          name: \"Actions\",\r\n          sortable: true,\r\n          cell: row => (\r\n            <ActionsComponent\r\n              row={row}\r\n              getData={this.props.getData}\r\n              parsedFilter={this.props.parsedFilter}\r\n              currentData={this.handleCurrentData}\r\n              deleteRow={this.handleDelete}\r\n            />\r\n          )\r\n        }\r\n      ]\r\n      this.setState({ columns })\r\n    }\r\n  }\r\n\r\n  handleFilter = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.filterData(e.target.value)\r\n  }\r\n\r\n  handleRowsPerPage = value => {\r\n    let { parsedFilter, getData } = this.props\r\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\r\n    history.push(`/data-list/list-view?page=${page}&perPage=${value}`)\r\n    this.setState({ rowsPerPage: value })\r\n    getData({ page: parsedFilter.page, perPage: value })\r\n  }\r\n\r\n  handleSidebar = (boolean, addNew = false) => {\r\n    this.setState({ sidebar: boolean })\r\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\r\n  }\r\n\r\n  handleDelete = row => {\r\n    this.props.deleteData(row)\r\n    this.props.getData(this.props.parsedFilter)\r\n    if (this.state.data.length - 1 === 0) {\r\n      let urlPrefix = this.props.thumbView\r\n        ? \"/data-list/thumb-view/\"\r\n        : \"/data-list/list-view/\"\r\n      history.push(\r\n        `${urlPrefix}list-view?page=${parseInt(\r\n          this.props.parsedFilter.page - 1\r\n        )}&perPage=${this.props.parsedFilter.perPage}`\r\n      )\r\n      this.props.getData({\r\n        page: this.props.parsedFilter.page - 1,\r\n        perPage: this.props.parsedFilter.perPage\r\n      })\r\n    }\r\n  }\r\n\r\n  handleCurrentData = obj => {\r\n    this.setState({ currentData: obj })\r\n    this.handleSidebar(true)\r\n  }\r\n\r\n  handlePagination = page => {\r\n    let { parsedFilter, getData } = this.props\r\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\r\n    let urlPrefix = this.props.thumbView\r\n      ? \"/data-list/thumb-view/\"\r\n      : \"/data-list/list-view/\"\r\n    history.push(\r\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\r\n    )\r\n    getData({ page: page.selected + 1, perPage: perPage })\r\n    this.setState({ currentPage: page.selected })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      columns,\r\n      data,\r\n      allData,\r\n      totalPages,\r\n      value,\r\n      rowsPerPage,\r\n      currentData,\r\n      sidebar,\r\n      totalRecords,\r\n      sortIndex\r\n    } = this.state\r\n    return (\r\n      <div\r\n        className={`data-list ${\r\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\r\n        }`}>\r\n        <DataTable\r\n          columns={columns}\r\n          data={value.length ? allData : data}\r\n          pagination\r\n          paginationServer\r\n          paginationComponent={() => (\r\n            <ReactPaginate\r\n              previousLabel={<ChevronLeft size={15} />}\r\n              nextLabel={<ChevronRight size={15} />}\r\n              breakLabel=\"...\"\r\n              breakClassName=\"break-me\"\r\n              pageCount={totalPages}\r\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\r\n              activeClassName=\"active\"\r\n              forcePage={\r\n                this.props.parsedFilter.page\r\n                  ? parseInt(this.props.parsedFilter.page - 1)\r\n                  : 0\r\n              }\r\n              onPageChange={page => this.handlePagination(page)}\r\n            />\r\n          )}\r\n          noHeader\r\n          subHeader\r\n          selectableRows\r\n          responsive\r\n          pointerOnHover\r\n          selectableRowsHighlight\r\n          onSelectedRowsChange={data =>\r\n            this.setState({ selected: data.selectedRows })\r\n          }\r\n          customStyles={selectedStyle}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              handleSidebar={this.handleSidebar}\r\n              handleFilter={this.handleFilter}\r\n              handleRowsPerPage={this.handleRowsPerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              total={totalRecords}\r\n              index={sortIndex}\r\n            />\r\n          }\r\n          sortIcon={<ChevronDown />}\r\n          selectableRowsComponent={Checkbox}\r\n          selectableRowsComponentProps={{\r\n            color: \"primary\",\r\n            icon: <Check className=\"vx-icon\" size={12} />,\r\n            label: \"\",\r\n            size: \"sm\"\r\n          }}\r\n        />\r\n        <Sidebar\r\n          show={sidebar}\r\n          data={currentData}\r\n          updateData={this.props.updateData}\r\n          addData={this.props.addData}\r\n          handleSidebar={this.handleSidebar}\r\n          thumbView={this.props.thumbView}\r\n          getData={this.props.getData}\r\n          dataParams={this.props.parsedFilter}\r\n          addNew={this.state.addNew}\r\n        />\r\n        <div\r\n          className={classnames(\"data-list-overlay\", {\r\n            show: sidebar\r\n          })}\r\n          onClick={() => this.handleSidebar(false, true)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dataList: state.dataList\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  getInitialData,\r\n  filterData\r\n})(DataListConfig)\r\n","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}