{"version":3,"sources":["views/apps/order/ReturnedOrder.js"],"names":["ReturnedOrder","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","orderId","payment_type","customer","first_name","last_name","product","product_name","qty","purchaseprice","delivery_address","order_date","value","status","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","this","sm","col-sm-6","tag","length","size","right","onClick","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/177.ac9c0071.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport {\r\n  Edit,\r\n  Trash2,\r\n  // Clipboard,\r\n  // Printer,\r\n  // Download,\r\n  ChevronDown,\r\n} from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nclass ReturnedOrder extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Order ID\",\r\n        field: \"orderId\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.orderId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Payment Type\",\r\n        field: \"order_type\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.payment_type}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Customer Name\",\r\n        field: \"customername\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div>\r\n              <span>\r\n                {params.data?.customer?.first_name}{\" \"}\r\n                {params.data?.customer?.last_name}\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Product Name\",\r\n        field: \"product.product_name\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.product?.product_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Total Qty \",\r\n        field: \"qty\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.qty}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Amount\",\r\n        field: \"purchaseprice\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.purchaseprice}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Address\",\r\n        field: \"delivery_address\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.delivery_address}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Order Date\",\r\n        field: \"order_date\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.order_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return params.value === \"Delivery\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Pending\" ? (\r\n            <div className=\"badge badge-pill badge-primary\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Cancel\" ? (\r\n            <div className=\"badge badge-pill badge-danger\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Returned\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Complete\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      //     {\r\n      //       headerName: \"Actions\",\r\n      //       field: \"transactions\",\r\n      //       width: 150,\r\n      //       cellRendererFramework: (params) => {\r\n      //         return (\r\n      //           <div className=\"actions cursor-pointer\">\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size={15}\r\n      //               onClick={() => history.push(\"/app/user/edit\")}\r\n      //             />\r\n      //             <Trash2\r\n      //               size={15}\r\n      //               onClick={() => {\r\n      //                 let selectedData = this.gridApi.getSelectedRows();\r\n      //                 this.gridApi.updateRowData({ remove: selectedData });\r\n      //               }}\r\n      //             />\r\n      //           </div>\r\n      //         );\r\n      //       },\r\n      //     },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/cancel_order\").then(response => {\r\n      let rowData = response.data.data;\r\n\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Returned Order\r\n                </h1>\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={e => this.updateSearchQuery(e.target.value)}\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {context => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReturnedOrder;\r\n"],"sourceRoot":""}