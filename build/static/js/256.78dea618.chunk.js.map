{"version":3,"sources":["views/apps/stockControl/AddStockTransfer.js"],"names":["AddStockTransfer","props","changeHandlerG","e","i","dum","state","target","name","console","log","value","setState","submitHandler","preventDefault","product","productG","length","push","productname","sku","skuG","hsn","hsmG","qty","qtyG","gst","gstG","amount","amountG","option","axiosConfig","post","headers","localStorage","getItem","then","response","history","catch","error","changeHandler","addTextbox","reference_no","from_warehouse","to_warehouse","transfer_date","delivery_duedate","transfer_type","reason","grandTotal","productC","this","splice","a","get","warehouseL","data","reasonL","className","col-sm-6","onClick","onSubmit","lg","md","required","type","onChange","map","warehouseList","key","_id","warehousename","reasonList","item","index","id","sm","color","addControls","placeholder","prod","product_name","rows","delControl","Component"],"mappings":"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","file":"static/js/256.78dea618.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  CustomInput,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nexport class AddStockTransfer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    {\r\n      this.state = {\r\n        addTextbox: [{}],\r\n        reference_no: \"\",\r\n        from_warehouse: \"\",\r\n        to_warehouse: \"\",\r\n        transfer_date: \"\",\r\n        delivery_duedate: \"\",\r\n        transfer_type: \"\",\r\n        reason: \"\",\r\n        grandTotal: \"\",\r\n        productC: [],\r\n        productG: [\"\"],\r\n        skuG: [\"\"],\r\n        hsmG: [\"\"],\r\n        amountG: [\"\"],\r\n        qtyG: [\"\"],\r\n        gstG: [\"\"],\r\n      };\r\n    }\r\n  }\r\n  addControls() {\r\n    this.setState({\r\n      productG: [...this.state.productG, \"\"],\r\n      skuG: [...this.state.skuG, \"\"],\r\n      hsmG: [...this.state.hsmG, \"\"],\r\n      amountG: [...this.state.amountG, \"\"],\r\n      qtyG: [...this.state.qtyG, \"\"],\r\n      gstG: [...this.state.gstG, \"\"],\r\n      addTextbox: [...this.state.addTextbox, \"\"],\r\n    });\r\n  }\r\n  delControl(i) {\r\n    console.log(this.state);\r\n    this.state.addTextbox.splice(i, 1);\r\n    this.state.productG.splice(i, 1);\r\n    this.state.skuG.splice(i, 1);\r\n    this.state.hsmG.splice(i, 1);\r\n    this.state.amountG.splice(i, 1);\r\n    this.state.qtyG.splice(i, 1);\r\n    this.state.gstG.splice(i, 1);\r\n    this.setState({});\r\n  }\r\n\r\n  changeHandlerG = (e, i) => {\r\n    // console.log(i);\r\n    // console.log(e.target);\r\n    var dum = this.state[e.target.name];\r\n    console.log(dum);\r\n    dum[i] = e.target.value;\r\n    this.setState({ [e.target.name]: dum });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    var product = [];\r\n    for (var i = 0; i < this.state.productG.length; i++) {\r\n      product.push({\r\n        productname: this.state.productG[i],\r\n        sku: this.state.skuG[i],\r\n        hsn: this.state.hsmG[i],\r\n        qty: this.state.qtyG[i],\r\n        gst: this.state.gstG[i],\r\n        amount: this.state.amountG[i],\r\n      });\r\n    }\r\n    var option = this.state;\r\n    option.product = product;\r\n    console.log(\"Option\", option);\r\n    axiosConfig\r\n      .post(\"/addstocktransfer\", option, {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/stockControl/stockTransferRequest\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  async componentDidMount() {\r\n    //Warehouse List\r\n    axiosConfig\r\n      .get(\"/getwarehouse\", {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ warehouseL: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    //Reason List\r\n    axiosConfig\r\n      .get(\"/getReason\", {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ reasonL: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    //Product Add\r\n    axiosConfig\r\n      .get(\"/productbysellerbytoken\", {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({ productC: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  // submitHandler = (e) => {\r\n  //   e.preventDefault();\r\n  //   axiosConfig\r\n  //     .post(\"/addstocktransfer\", option)\r\n  //     .then((response) => {\r\n  //       console.log(response);\r\n  //       swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n  //       this.props.history.push(\"/app/stockControl/StockTransferRequest\");\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error.response);\r\n  //     });\r\n  // };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add New Stock Transfer\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() =>\r\n                  history.push(\"/app/stockControl/stockTransferRequest\")\r\n                }\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Referance Number</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"reference_no\"\r\n                    value={this.state.reference_no}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Select From Warehouse</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"from_warehouse\"\r\n                    value={this.state.from_warehouse}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    {this.state.warehouseL?.map((warehouseList) => (\r\n                      <option key={warehouseList._id} value={warehouseList._id}>\r\n                        {warehouseList.warehousename}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Select To Warehouse</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"to_warehouse\"\r\n                    value={this.state.to_warehouse}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    {this.state.warehouseL?.map((warehouseList) => (\r\n                      <option key={warehouseList._id} value={warehouseList._id}>\r\n                        {warehouseList.warehousename}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Transfer Date</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"date\"\r\n                    name=\"transfer_date\"\r\n                    value={this.state.transfer_date}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Delivery Due Date</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"date\"\r\n                    name=\"delivery_duedate\"\r\n                    value={this.state.delivery_duedate}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Transfer Type</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"transfer_type\"\r\n                    value={this.state.transfer_type}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option value=\"ABC\">ABC</option>\r\n                    <option value=\"XYZ\">XYZ</option>\r\n                    <option value=\"ABCD\">ABCD</option>\r\n                    <option value=\"EFG\">EFG</option>\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Reason</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"reason\"\r\n                    value={this.state.reason}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    {this.state.reasonL?.map((reasonList) => (\r\n                      <option key={reasonList._id} value={reasonList._id}>\r\n                        {reasonList.reason}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <div>\r\n                  {this.state.addTextbox.map((item, index) => (\r\n                    <div>\r\n                      {/* {index ? ( */}\r\n                      <div id=\"btn\">\r\n                        <Row>\r\n                          <Col\r\n                            lg=\"6\"\r\n                            md=\"6\"\r\n                            sm=\"6\"\r\n                            className=\"mb-2 d-flex align-items-start\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              onClick={() => this.addControls()}\r\n                            >\r\n                              Add\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      {/* ) : null} */}\r\n\r\n                      <Row>\r\n                        <Col md=\"2\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label> Product Name </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              name=\"productG\"\r\n                              placeholder=\" Product Name\"\r\n                              value={this.state.productG[index]}\r\n                              onChange={(e) => {\r\n                                this.changeHandlerG(e, index);\r\n                              }}\r\n                            >\r\n                              <option>Select Product</option>\r\n                              {this.state.productC?.map((prod) => (\r\n                                <option key={prod._id} value={prod._id}>\r\n                                  {prod.product_name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"2\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label> SKU </Label>\r\n                            <Input\r\n                              required\r\n                              type=\"number\"\r\n                              name=\"skuG\"\r\n                              placeholder=\"SKU\"\r\n                              value={this.state.skuG[index]}\r\n                              onChange={(e) => {\r\n                                this.changeHandlerG(e, index);\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"2\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label> HSN </Label>\r\n                            <Input\r\n                              required\r\n                              type=\"number\"\r\n                              rows=\"5\"\r\n                              name=\"hsmG\"\r\n                              placeholder=\"HSN\"\r\n                              value={this.state.hsmG[index]}\r\n                              onChange={(e) => {\r\n                                this.changeHandlerG(e, index);\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"1\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label> Quantity </Label>\r\n                            <Input\r\n                              required\r\n                              type=\"number\"\r\n                              rows=\"5\"\r\n                              name=\"qtyG\"\r\n                              placeholder=\"Quantity\"\r\n                              value={this.state.qtyG[index]}\r\n                              onChange={(e) => {\r\n                                this.changeHandlerG(e, index);\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"2\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label> GST </Label>\r\n                            <Input\r\n                              required\r\n                              type=\"text\"\r\n                              rows=\"5\"\r\n                              name=\"gstG\"\r\n                              placeholder=\"GST\"\r\n                              value={this.state.gstG[index]}\r\n                              onChange={(e) => {\r\n                                this.changeHandlerG(e, index);\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"2\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label> Amount </Label>\r\n                            <Input\r\n                              required\r\n                              type=\"number\"\r\n                              rows=\"5\"\r\n                              name=\"amountG\"\r\n                              placeholder=\"Amount\"\r\n                              value={this.state.amountG[index]}\r\n                              onChange={(e) => {\r\n                                this.changeHandlerG(e, index);\r\n                              }}\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col\r\n                          md=\"1\"\r\n                          sm=\"6\"\r\n                          className=\"p-2 d-flex justify-content-end\"\r\n                        >\r\n                          <Button\r\n                            color=\"danger\"\r\n                            onClick={() => this.delControl(index)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Row>\r\n              <Row className=\"d-flex justify-content-end\">\r\n                <Col lg=\"4\">\r\n                  <FormGroup>\r\n                    <Label>Grand Total</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      name=\"grandTotal\"\r\n                      placeholder=\"Grand Total\"\r\n                      value={this.state.grandTotal}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button color=\"danger\" type=\"submit\" className=\"mr-1 mb-1\">\r\n                  Submit\r\n                </Button>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddStockTransfer;\r\n"],"sourceRoot":""}