{"version":3,"sources":["views/apps/order/AllOrder.js"],"names":["AllOrder","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","cus_orderId","moment","createdAt","format","payment_type","customer","firstname","lastname","value","status","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","headers","localStorage","getItem","then","response","console","log","catch","error","this","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/122.9e9bd916.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport {\r\n  Edit,\r\n  Trash2,\r\n  // Clipboard,\r\n  // Printer,\r\n  // Download,\r\n  ChevronDown,\r\n  Eye,\r\n} from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport moment from \"moment\";\r\n\r\nclass AllOrder extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 80,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Order ID\",\r\n        field: \"cus_orderId\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.cus_orderId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Order Date\",\r\n        field: \"createdAt\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{moment(this.state.data?.createdAt).format(\"ll\")}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Payment Type\",\r\n        field: \"orderId.payment_type\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center\">\r\n              <span>{params.data?.payment_type}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Customer Name\",\r\n        field: \"cartId.customer.firstname\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>\r\n                {params.data?.customer?.firstname}{\" \"}\r\n                {params.data?.customer?.lastname}\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Order Placed\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Delivered\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Pending\" ? (\r\n            <div className=\"badge badge-pill badge-primary\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Cancelled\" ? (\r\n            <div className=\"badge badge-pill badge-danger\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Completed\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/order/viewOrder/${params.data._id}`)\r\n                }\r\n              />\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/order/editOrder/${params.data._id}`)\r\n                }\r\n              />\r\n              <Trash2\r\n                size={20}\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig\r\n      .get(\"/orderbyseller\", {\r\n        headers: {\r\n          \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let rowData = response.data.data;\r\n\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Order List\r\n                </h1>\r\n              </Col>\r\n              {/* <Col>\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() => history.push(\"/app/order/addorder\")}\r\n                >\r\n                  Add New Order\r\n                </Button>\r\n              </Col> */}\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllOrder;\r\n"],"sourceRoot":""}