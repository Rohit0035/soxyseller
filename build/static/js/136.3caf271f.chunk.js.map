{"version":3,"sources":["extensions/sweet-alert/SweetAlertBasic.js","extensions/sweet-alert/SweetAlertTypes.js","extensions/sweet-alert/SweetAlertOptions.js","extensions/sweet-alert/SweetAlertCallback.js","extensions/sweet-alert/SweetAlert.js","extensions/extensionsHeader.js"],"names":["BasicSweetAlert","state","basicAlert","titleAlert","htmlAlert","handleAlert","value","setState","Card","CardHeader","CardTitle","CardBody","Button","className","color","onClick","outline","title","show","this","onConfirm","href","target","rel","React","Component","SweetAlertTypes","successAlert","errorAlert","infoAlert","warningAlert","success","error","info","warning","SweetAlertOptions","imgAlert","timerAlert","outsideClickAlert","overlayAlert","inputAlert","custom","customIcon","timeout","onCancel","closeOnClickOutside","hideOverlay","input","placeHolder","BasicSweetCallback","defaultAlert","confirmAlert","cancelAlert","showCancel","reverseButtons","cancelBtnBsStyle","confirmBtnText","cancelBtnText","confirmBtnBsStyle","Slider","Fragment","subTitle","link","Row","Col","sm","SweetAlertCallback","ExtensionsHeader","data-tour","props"],"mappings":"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","file":"static/js/136.3caf271f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n\r\nclass BasicSweetAlert extends React.Component {\r\n  state = {\r\n   basicAlert : false, \r\n   titleAlert : false, \r\n   htmlAlert : false, \r\n  }\r\n\r\n  handleAlert = (state, value) => {\r\n    this.setState({ [state] : value })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Basic</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <p>SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop computer, mobile or tablet. \r\n          It's even highly customizable, as you can see below!\r\n        </p>\r\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"basicAlert\", true)} outline>Basic</Button>\r\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"titleAlert\", true)} outline>With Title</Button>\r\n        <Button className=\"mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"htmlAlert\", true)} outline>HTML</Button>\r\n        \r\n        <SweetAlert title=\"Any fool can use a computer\" \r\n          show={this.state.basicAlert}\r\n          onConfirm={() => this.handleAlert(\"basicAlert\", false)}\r\n        >\r\n        </SweetAlert>\r\n\r\n        <SweetAlert title=\"The Internet?,\" \r\n          show={this.state.titleAlert} \r\n          onConfirm={() => this.handleAlert(\"titleAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">That thing is still around?</p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert title={<strong>HTML <u>example</u></strong>} \r\n          show={this.state.htmlAlert} \r\n          onConfirm={() => this.handleAlert(\"htmlAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">You can use bold text,{\" \"}\r\n              <a href=\"http://pixinvent.com\" target=\"_blank\" rel=\"noopener noreferrer\">links</a> {\" \"}\r\n              and other HTML tags\r\n            </p>\r\n        </SweetAlert>\r\n\r\n      </CardBody>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BasicSweetAlert","import React from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n\r\nclass SweetAlertTypes extends React.Component {\r\n  state = {\r\n   successAlert : false, \r\n   errorAlert : false, \r\n   infoAlert : false, \r\n   warningAlert : false\r\n  }\r\n\r\n  handleAlert = (state, value) => {\r\n    this.setState({ [state] : value })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Types</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <p>\r\n          SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"warning\", \"error\", \"success\" and \"info\". \r\n        </p>\r\n        <Button className=\"mr-1 mb-1\" color=\"success\" onClick={() => this.handleAlert(\"successAlert\", true)} outline>Success</Button>\r\n        <Button className=\"mr-1 mb-1\" color=\"danger\" onClick={() => this.handleAlert(\"errorAlert\", true)} outline>Error</Button>\r\n        <Button className=\"mr-1 mb-1\" color=\"warning\" onClick={() => this.handleAlert(\"warningAlert\", true)} outline>Warning</Button>\r\n        <Button className=\"mb-1\" color=\"info\" onClick={() => this.handleAlert(\"infoAlert\", true)} outline>Info</Button>\r\n        \r\n\r\n        <SweetAlert success title=\"Success\"\r\n          show={this.state.successAlert} \r\n          onConfirm={() => this.handleAlert(\"successAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">You clicked the button!</p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert error title=\"Error\"\r\n          show={this.state.errorAlert} \r\n          onConfirm={() => this.handleAlert(\"errorAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              You clicked the button!\r\n            </p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert info title=\"Info!\"\r\n          show={this.state.infoAlert} \r\n          onConfirm={() => this.handleAlert(\"infoAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              You clicked the button!\r\n            </p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert warning title=\"Warning\"\r\n          show={this.state.warningAlert} \r\n          onConfirm={() => this.handleAlert(\"warningAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              You clicked the button!\r\n            </p>\r\n        </SweetAlert>\r\n\r\n      </CardBody>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SweetAlertTypes","import React from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n// import alertImg from \"../../assets/img/slider/04.jpg\"\r\n\r\nclass SweetAlertOptions extends React.Component {\r\n  state = {\r\n   imgAlert : false, \r\n   timerAlert : false, \r\n   outsideClickAlert : false, \r\n   overlayAlert : false,\r\n   inputAlert : false\r\n  }\r\n\r\n  handleAlert = (state, value) => {\r\n    this.setState({ [state] : value })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Options</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"imgAlert\", true)} outline>Image</Button>\r\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"timerAlert\", true)} outline>Timeout</Button>\r\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"overlayAlert\", true)} outline>Overlay</Button>\r\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"outsideClickAlert\", true)} outline>Outside Click</Button>\r\n        <Button className=\"mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"inputAlert\", true)} outline>Input Alert</Button>\r\n        \r\n\r\n        <SweetAlert title=\"Sweet!\"  \r\n          custom\r\n          show={this.state.imgAlert}\r\n          customIcon=\"https://raw.githubusercontent.com/djorg83/react-bootstrap-sweetalert/master/demo/assets/thumbs-up.jpg\"\r\n          onConfirm={() => this.handleAlert(\"imgAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">Sweet Alert with an image.</p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert title=\"Auto close alert!\"\r\n          timeout={2000}\r\n          show={this.state.timerAlert} \r\n          onConfirm={() => this.handleAlert(\"timerAlert\", false)}\r\n          onCancel={() => this.handleAlert(\"timerAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              I will close in 2 seconds.\r\n            </p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert title=\"Click outside to close!\"\r\n          closeOnClickOutside\r\n          show={this.state.outsideClickAlert} \r\n          onConfirm={() => this.handleAlert(\"outsideClickAlert\", false)}\r\n          onCancel={() => this.handleAlert(\"outsideClickAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              You clicked the button!\r\n            </p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert title=\"No Overlay\"\r\n          hideOverlay\r\n          show={this.state.overlayAlert} \r\n          onConfirm={() => this.handleAlert(\"overlayAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              You clicked the button!\r\n            </p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert title=\"An input!\"\r\n          input\r\n          show={this.state.inputAlert}\r\n          placeHolder=\"Write something\" \r\n          onConfirm={() => this.handleAlert(\"inputAlert\", false)}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              Write something interesting:\r\n            </p>\r\n        </SweetAlert>\r\n\r\n      </CardBody>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SweetAlertOptions","import React from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n\r\nclass BasicSweetCallback extends React.Component {\r\n  state = {\r\n   defaultAlert : false, \r\n   confirmAlert : false, \r\n   cancelAlert : false, \r\n  }\r\n\r\n  handleAlert = (state, value) => {\r\n    this.setState({ [state] : value })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Callback</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"defaultAlert\", true)} outline>Callback</Button>\r\n        \r\n        <SweetAlert title=\"Are you sure?\" \r\n          warning\r\n          show={this.state.defaultAlert}\r\n          showCancel\r\n          reverseButtons\r\n          cancelBtnBsStyle=\"danger\"\r\n          confirmBtnText=\"Yes, delete it!\"\r\n          cancelBtnText=\"Cancel\"\r\n          onConfirm={() => {\r\n            this.handleAlert(\"basicAlert\", false)\r\n            this.handleAlert(\"confirmAlert\", true)\r\n          }}\r\n          onCancel={() => {\r\n            this.handleAlert(\"basicAlert\", false)\r\n            this.handleAlert(\"cancelAlert\", true)\r\n          }}\r\n        >\r\n          You won't be able to revert this!\r\n        </SweetAlert>\r\n\r\n        <SweetAlert success title=\"Deleted!\" \r\n          confirmBtnBsStyle=\"success\"\r\n          show={this.state.confirmAlert} \r\n          onConfirm={() => {\r\n            this.handleAlert(\"defaultAlert\", false)\r\n            this.handleAlert(\"confirmAlert\", false)\r\n          }}\r\n        >\r\n            <p className=\"sweet-alert-text\">Your file has been deleted.</p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert error title=\"Cancelled\" \r\n          confirmBtnBsStyle=\"success\"\r\n          show={this.state.cancelAlert} \r\n          onConfirm={() =>{\r\n            this.handleAlert(\"defaultAlert\", false)\r\n            this.handleAlert(\"cancelAlert\", false)\r\n          }}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              Your imaginary file is safe :)\r\n            </p>\r\n        </SweetAlert>\r\n\r\n      </CardBody>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BasicSweetCallback","import React from \"react\"\r\nimport ExtensionsHeader from \"../extensionsHeader\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport BasicSweetAlert from \"./SweetAlertBasic\"\r\nimport SweetAlertTypes from \"./SweetAlertTypes\"\r\nimport SweetAlertOptions from \"./SweetAlertOptions\"\r\nimport SweetAlertCallback from \"./SweetAlertCallback\"\r\nimport \"../../assets/scss/plugins/extensions/sweet-alerts.scss\"\r\nclass Slider extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ExtensionsHeader\r\n          title=\"Sweet Alerts\"\r\n          subTitle=\"A React implementation of SweetAlert\"\r\n          link=\"https://github.com/djorg83/react-bootstrap-sweetalert\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <BasicSweetAlert />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <SweetAlertTypes />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <SweetAlertOptions />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <SweetAlertCallback />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Slider\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import { Star } from \"react-feather\"\r\n\r\nclass ExtensionsHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"mb-2\">\r\n        <Col sm=\"12\" className=\"ml-50\">\r\n          <p\r\n            className=\"font-medium-5 mt-1 extension-title\"\r\n            data-tour=\"extension-title\"\r\n          >\r\n            {this.props.title}\r\n          </p>\r\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {this.props.subTitle}\r\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \r\n          }\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default ExtensionsHeader\r\n"],"sourceRoot":""}