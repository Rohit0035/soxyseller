{"version":3,"sources":["extensions/dropzone/DropzoneBasic.js","extensions/dropzone/DropzoneAccept.js","extensions/dropzone/DropzoneProgrammatically.js","extensions/dropzone/DropzoneDisabled.js","extensions/dropzone/Dropzone.js","extensions/extensionsHeader.js"],"names":["BasicDropzone","props","useState","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","className","key","name","src","alt","useEffect","forEach","revokeObjectURL","DropzoneBasic","Card","CardHeader","CardTitle","CardBody","React","Component","DropzoneAccepted","acceptedFilesItems","DropzoneAccept","ProgrammaticallyDropzone","noClick","noKeyboard","open","Button","Ripple","color","outline","onClick","DropzoneProgrammatically","Disabled","disabled","size","DropzoneDisabled","Uploader","Fragment","title","subTitle","link","Row","Col","lg","md","ExtensionsHeader","sm","data-tour","this","href","target","rel"],"mappings":"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","file":"static/js/133.e79843f2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\r\nimport { useDropzone } from \"react-dropzone\"\r\n\r\nfunction BasicDropzone(props) {\r\n  const [files, setFiles] = useState([])\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: acceptedFiles => {\r\n      setFiles(\r\n        acceptedFiles.map(file =>\r\n          Object.assign(file, {\r\n          \r\n            preview: URL.createObjectURL(file)\r\n            \r\n          })\r\n        )\r\n      )\r\n    }\r\n  })\r\n \r\n  const thumbs = files.map(file => (\r\n    <div className=\"dz-thumb\" key={file.name}>\r\n      <div className=\"dz-thumb-inner\">\r\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach(file => URL.revokeObjectURL(file.preview))\r\n    },\r\n    [files]\r\n  )\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"mx-1\">\r\n          Drag 'n' drop some files here, or click to select files\r\n        </p>\r\n      </div>\r\n      <aside className=\"thumb-container\">{thumbs}</aside>\r\n    </section>\r\n  )\r\n}\r\n\r\nclass DropzoneBasic extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Basic</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BasicDropzone />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DropzoneBasic\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\r\nimport { useDropzone } from \"react-dropzone\"\r\n\r\nfunction DropzoneAccepted(props) {\r\n  const [files, setFiles] = useState([])\r\n  const {\r\n    acceptedFiles,\r\n    // rejectedFiles,\r\n    getRootProps,\r\n    getInputProps\r\n  } = useDropzone({\r\n    accept: \"image/jpeg, image/png\",\r\n    onDrop: acceptedFiles => {\r\n      setFiles(\r\n        acceptedFiles.map(file =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      )\r\n    }\r\n  })\r\n  const thumbs = files.map(file => (\r\n    <div className=\"dz-thumb\" key={file.name}>\r\n      <div className=\"dz-thumb-inner\">\r\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\r\n      </div>\r\n    </div>\r\n  ))\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach(file => URL.revokeObjectURL(file.preview))\r\n    },\r\n    [files]\r\n  )\r\n\r\n  const acceptedFilesItems = acceptedFiles.map(file => (\r\n    <aside className=\"thumb-container mb-1\">{thumbs}</aside>\r\n  ))\r\n\r\n  // const rejectedFilesItems = rejectedFiles.map(file => (\r\n  //   <div key={file.path}>\r\n  //     {file.path} - {file.size} bytes\r\n  //   </div>\r\n  // ))\r\n\r\n  return (\r\n    <section className=\"pb-1\">\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"mx-1\">\r\n          <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n        </p>\r\n      </div>\r\n      <aside>{acceptedFilesItems}</aside>\r\n    </section>\r\n  )\r\n}\r\n\r\nclass DropzoneAccept extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Specific File Types</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <DropzoneAccepted />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DropzoneAccept\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\r\nimport { useDropzone } from \"react-dropzone\"\r\n\r\nfunction ProgrammaticallyDropzone(props) {\r\n  const [files, setFiles] = useState([])\r\n  const { getRootProps, getInputProps, open } = useDropzone({\r\n    accept: \"image/*\",\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    onDrop: acceptedFiles => {\r\n      setFiles(\r\n        acceptedFiles.map(file =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      )\r\n    }\r\n  })\r\n\r\n  const thumbs = files.map(file => (\r\n    <div className=\"dz-thumb\" key={file.name}>\r\n      <div className=\"dz-thumb-inner\">\r\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach(file => URL.revokeObjectURL(file.preview))\r\n    },\r\n    [files]\r\n  )\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"mx-1\">\r\n          Drag 'n' drop some files here, or click to select files\r\n        </p>\r\n      </div>\r\n      <Button.Ripple color=\"primary\" outline className=\"my-1\" onClick={open}>\r\n        Open File Dialog\r\n      </Button.Ripple>\r\n      <aside className=\"thumb-container\">{thumbs}</aside>\r\n    </section>\r\n  )\r\n}\r\n\r\nclass DropzoneProgrammatically extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Opening File Dialog Programmatically</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ProgrammaticallyDropzone />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DropzoneProgrammatically\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\r\nimport { useDropzone } from \"react-dropzone\"\r\n\r\nfunction Disabled(props) {\r\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n    disabled: true\r\n  })\r\n\r\n  const files = acceptedFiles.map(file => (\r\n    <li key={file.name}>\r\n      {file.name} - {file.size} bytes\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <section className=\"pb-5\">\r\n      <div {...getRootProps({ className: \"dropzone disabled\" })}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"mx-1\">\r\n          Drag 'n' drop some files here, or click to select files\r\n        </p>\r\n      </div>\r\n      <aside>{files}</aside>\r\n    </section>\r\n  )\r\n}\r\nclass DropzoneDisabled extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Disabled</CardTitle>\r\n        </CardHeader>\r\n        <CardBody className=\"pb-3\">\r\n          <Disabled />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DropzoneDisabled\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport ExtensionsHeader from \"../extensionsHeader\"\r\nimport DropzoneBasic from \"./DropzoneBasic\"\r\nimport DropzoneAccept from \"./DropzoneAccept\"\r\nimport DropzoneProgrammatically from \"./DropzoneProgrammatically\"\r\nimport DropzoneDisabled from \"./DropzoneDisabled\"\r\n\r\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\"\r\n\r\nclass Uploader extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ExtensionsHeader\r\n          title=\"React Dropzone\"\r\n          subTitle=\"Simple HTML5 drag-drop zone with React.js.\"\r\n          link=\"https://react-dropzone.js.org\"\r\n        />\r\n\r\n        <Row>\r\n          <Col lg=\"6\" md=\"12\">\r\n            <DropzoneBasic />{\" \"}\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\">\r\n            <DropzoneAccept />{\" \"}\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\">\r\n            <DropzoneProgrammatically />{\" \"}\r\n          </Col>\r\n          <Col lg=\"6\" md=\"12\">\r\n            <DropzoneDisabled />{\" \"}\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Uploader\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import { Star } from \"react-feather\"\r\n\r\nclass ExtensionsHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"mb-2\">\r\n        <Col sm=\"12\" className=\"ml-50\">\r\n          <p\r\n            className=\"font-medium-5 mt-1 extension-title\"\r\n            data-tour=\"extension-title\"\r\n          >\r\n            {this.props.title}\r\n          </p>\r\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {this.props.subTitle}\r\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \r\n          }\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nexport default ExtensionsHeader\r\n"],"sourceRoot":""}